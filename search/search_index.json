{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Iflearner-flow - A multi-party joint task security scheduling platform \u00b6 DOCS | \u4e2d\u6587 Iflearner Flow is a multi-party joint task security scheduling platform based on the underlying federated learning framework Iflearner , which for horizontal federated learning scenarios. Main Features \u00b6 Support user-defined algorithm mirroring (mainstream deep learning algorithms can be integrated) SMPC automatic networking (users do not need to care about network details) Support large-scale cluster task scheduling (based on kubernetes) Function \u00b6 Joint Job and Task Scheduling Job real-time monitoring REST API\u3001CLI\u3001SDK Data access (local data) WEB Documentation \u00b6 Iflearner Flow related documentation: Iflearner Flow License \u00b6 Apache License 2.0","title":"Home"},{"location":"#iflearner-flow-a-multi-party-joint-task-security-scheduling-platform","text":"DOCS | \u4e2d\u6587 Iflearner Flow is a multi-party joint task security scheduling platform based on the underlying federated learning framework Iflearner , which for horizontal federated learning scenarios.","title":"Iflearner-flow - A multi-party joint task security scheduling platform"},{"location":"#main-features","text":"Support user-defined algorithm mirroring (mainstream deep learning algorithms can be integrated) SMPC automatic networking (users do not need to care about network details) Support large-scale cluster task scheduling (based on kubernetes)","title":"Main Features"},{"location":"#function","text":"Joint Job and Task Scheduling Job real-time monitoring REST API\u3001CLI\u3001SDK Data access (local data) WEB","title":"Function"},{"location":"#documentation","text":"Iflearner Flow related documentation: Iflearner Flow","title":"Documentation"},{"location":"#license","text":"Apache License 2.0","title":"License"},{"location":"about/changelog/","text":"changelog \u00b6 All notable changes to this project will be recorded in this file. iflearner-flow-server \u00b6 [Unreleased] \u00b6 Add \u00b6 Task template management function (basic CRUD) Task management functions (basic create, query, delete, start, stop operations) Support API, SDK, CLI operation in three ways iflearner-flow-client \u00b6 [Unreleased] \u00b6 Add \u00b6 Task management function (basic task query operation) Support API, SDK, CLI operation in three ways","title":"ChangeLog"},{"location":"about/changelog/#changelog","text":"All notable changes to this project will be recorded in this file.","title":"changelog"},{"location":"about/changelog/#iflearner-flow-server","text":"","title":"iflearner-flow-server"},{"location":"about/changelog/#unreleased","text":"","title":"[Unreleased]"},{"location":"about/changelog/#add","text":"Task template management function (basic CRUD) Task management functions (basic create, query, delete, start, stop operations) Support API, SDK, CLI operation in three ways","title":"Add"},{"location":"about/changelog/#iflearner-flow-client","text":"","title":"iflearner-flow-client"},{"location":"about/changelog/#unreleased_1","text":"","title":"[Unreleased]"},{"location":"about/changelog/#add_1","text":"Task management function (basic task query operation) Support API, SDK, CLI operation in three ways","title":"Add"},{"location":"about/contact/","text":"contact us \u00b6 If you have any questions you want to solve or want to join us to build a project together, you can contact us through the following contact channels, We very much welcome you to join us. contact path \u00b6 You can join our WeChat group. For frequently asked questions, we provide you with the corresponding FAQ document. Please use issues to file bugs. Please use pull requests to submit and contribute code.","title":"ContactUs"},{"location":"about/contact/#contact-us","text":"If you have any questions you want to solve or want to join us to build a project together, you can contact us through the following contact channels, We very much welcome you to join us.","title":"contact us"},{"location":"about/contact/#contact-path","text":"You can join our WeChat group. For frequently asked questions, we provide you with the corresponding FAQ document. Please use issues to file bugs. Please use pull requests to submit and contribute code.","title":"contact path"},{"location":"api/errcode/iflearner_flow_federate_errcode/","text":"Iflearn Flow Federate Errcode API \u00b6 Success \u00b6 ret_module ret_code ret_msg SuccessResponse 0 success TaskError \u00b6 ret_module ret_code ret_msg TaskIflearnerFlowServerInternalError 20100 call iflearner_flow_server internal error TaskIflearnerFlowServerRetCodeError 20101 call iflearner_flow_server ret code error","title":"FlowFederateErrcode"},{"location":"api/errcode/iflearner_flow_federate_errcode/#iflearn-flow-federate-errcode-api","text":"","title":"Iflearn Flow Federate Errcode API"},{"location":"api/errcode/iflearner_flow_federate_errcode/#success","text":"ret_module ret_code ret_msg SuccessResponse 0 success","title":"Success"},{"location":"api/errcode/iflearner_flow_federate_errcode/#taskerror","text":"ret_module ret_code ret_msg TaskIflearnerFlowServerInternalError 20100 call iflearner_flow_server internal error TaskIflearnerFlowServerRetCodeError 20101 call iflearner_flow_server ret code error","title":"TaskError"},{"location":"api/errcode/iflearner_flow_server_errcode/","text":"Iflearn Flow Federate Errcode API \u00b6 CommonError \u00b6 ret_module ret_code ret_msg RequestParamResonse 10000 request param invalid FederateError \u00b6 ret_module ret_code ret_msg FederateRepeatRegister 10100 federate has been registered Success \u00b6 ret_module ret_code ret_msg SuccessResponse 0 success TaskError \u00b6 ret_module ret_code ret_msg TaskNameDuplicate 10301 duplicate task name TaskNameEmpty 10302 empty task name TaskNotFound 10300 task not found TaskPartyNotFound 10304 task party not found TaskStatusConflicit 10303 status conflicit TemplateError \u00b6 ret_module ret_code ret_msg TemplateNameEmpty 10202 empty template name TemplateNotFound 10200 template not found TemplateRepeat 10201 duplicate template name","title":"FlowServerErrcode"},{"location":"api/errcode/iflearner_flow_server_errcode/#iflearn-flow-federate-errcode-api","text":"","title":"Iflearn Flow Federate Errcode API"},{"location":"api/errcode/iflearner_flow_server_errcode/#commonerror","text":"ret_module ret_code ret_msg RequestParamResonse 10000 request param invalid","title":"CommonError"},{"location":"api/errcode/iflearner_flow_server_errcode/#federateerror","text":"ret_module ret_code ret_msg FederateRepeatRegister 10100 federate has been registered","title":"FederateError"},{"location":"api/errcode/iflearner_flow_server_errcode/#success","text":"ret_module ret_code ret_msg SuccessResponse 0 success","title":"Success"},{"location":"api/errcode/iflearner_flow_server_errcode/#taskerror","text":"ret_module ret_code ret_msg TaskNameDuplicate 10301 duplicate task name TaskNameEmpty 10302 empty task name TaskNotFound 10300 task not found TaskPartyNotFound 10304 task party not found TaskStatusConflicit 10303 status conflicit","title":"TaskError"},{"location":"api/errcode/iflearner_flow_server_errcode/#templateerror","text":"ret_module ret_code ret_msg TemplateNameEmpty 10202 empty template name TemplateNotFound 10200 template not found TemplateRepeat 10201 duplicate template name","title":"TemplateError"},{"location":"api/swagger/iflearner_flow_federate_swagger/","text":"Swagger API \u00b6","title":"FlowFederateAPI"},{"location":"api/swagger/iflearner_flow_federate_swagger/#swagger-api","text":"","title":"Swagger API"},{"location":"api/swagger/iflearner_flow_server_swagger/","text":"Swagger API \u00b6","title":"FlowServerAPI"},{"location":"api/swagger/iflearner_flow_server_swagger/#swagger-api","text":"","title":"Swagger API"},{"location":"client/flow_federate_cli/","text":"Introduction \u00b6 First, You can execute the following command to quickly install: pip install iflearner-flow-client Second, We will introduce how to interact with iflearner_flow_federate using the command line tool flow_federate_cli , the following are the subcommands. Usage: flow_federate_cli [ OPTIONS ] COMMAND [ ARGS ] ... Iflearner Flow Federate Cli. Options: -h, --help Show this message and exit. Commands: init Iflearner Federate Flow Cli Init Command task Task Operations Group The specific command usage is as follows. Initialization \u00b6 Before using the command line, we need to initialize the operation, mainly to configure the relevant parameters of the connection service Usage flow_federate_cli init [ OPTIONS ] OPTIONS parameter name required type description --host yes string The host of the connection server iflearner_flow_federate --port yes string The port of the connection server iflearner_flow_federate Request Example flow_federate_cli init --host 127 .0.0.1 --port 1235 Request Example { \"ret_code\" : 0 , \"ret_message\" : \"success\" } Task \u00b6","title":"FlowFederateCLI"},{"location":"client/flow_federate_cli/#introduction","text":"First, You can execute the following command to quickly install: pip install iflearner-flow-client Second, We will introduce how to interact with iflearner_flow_federate using the command line tool flow_federate_cli , the following are the subcommands. Usage: flow_federate_cli [ OPTIONS ] COMMAND [ ARGS ] ... Iflearner Flow Federate Cli. Options: -h, --help Show this message and exit. Commands: init Iflearner Federate Flow Cli Init Command task Task Operations Group The specific command usage is as follows.","title":"Introduction"},{"location":"client/flow_federate_cli/#initialization","text":"Before using the command line, we need to initialize the operation, mainly to configure the relevant parameters of the connection service Usage flow_federate_cli init [ OPTIONS ] OPTIONS parameter name required type description --host yes string The host of the connection server iflearner_flow_federate --port yes string The port of the connection server iflearner_flow_federate Request Example flow_federate_cli init --host 127 .0.0.1 --port 1235 Request Example { \"ret_code\" : 0 , \"ret_message\" : \"success\" }","title":"Initialization"},{"location":"client/flow_federate_cli/#task","text":"","title":"Task"},{"location":"client/flow_federate_sdk/","text":"flow_federate_sdk \u00b6 Introduction \u00b6 We will describe how to use the flow_federate_sdk sdk library to interact with iflearner_flow_federate service. Installation \u00b6 You can execute the following command to quickly install: pip install iflearner-flow-client Then you can reference the flow_federate_sdk library for interface calls Initialization \u00b6 We need to initialize the operation first, mainly to complete the relevant parameters of configuring the connection service, and generate a client object. Parameters parameter required type description host yes string The host for connecting iflearner_flow_federate server port yes string The port for connecting iflearner_flow_federate server Usage from flow_federate_sdk import FlowFederateSdk # use real ip address to initialize SDK flow_federate_client = FlowFederateSdk ( host = \"127.0.0.1\" , port = \"1235\" ) Task \u00b6","title":"FlowFederateSDK"},{"location":"client/flow_federate_sdk/#flow_federate_sdk","text":"","title":"flow_federate_sdk"},{"location":"client/flow_federate_sdk/#introduction","text":"We will describe how to use the flow_federate_sdk sdk library to interact with iflearner_flow_federate service.","title":"Introduction"},{"location":"client/flow_federate_sdk/#installation","text":"You can execute the following command to quickly install: pip install iflearner-flow-client Then you can reference the flow_federate_sdk library for interface calls","title":"Installation"},{"location":"client/flow_federate_sdk/#initialization","text":"We need to initialize the operation first, mainly to complete the relevant parameters of configuring the connection service, and generate a client object. Parameters parameter required type description host yes string The host for connecting iflearner_flow_federate server port yes string The port for connecting iflearner_flow_federate server Usage from flow_federate_sdk import FlowFederateSdk # use real ip address to initialize SDK flow_federate_client = FlowFederateSdk ( host = \"127.0.0.1\" , port = \"1235\" )","title":"Initialization"},{"location":"client/flow_federate_sdk/#task","text":"","title":"Task"},{"location":"client/flow_server_cli/","text":"Introduction \u00b6 First, You can execute the following command to quickly install: pip install iflearner-flow-client Secondly, We will introduce how to interact with iflearner_flow_server using the command line tool flow_server_cli , the following are the subcommands. Usage: flow_server_cli [ OPTIONS ] COMMAND [ ARGS ] ... Iflearner Flow Server Cli. Options: -h, --help Show this message and exit. Commands: init Iflearner Server Flow Cli Init Command task Task Operations Group template Template Operations Group The specific command usage is as follows. Initialization \u00b6 Before using the command line, we need to initialize the operation, mainly to configure the relevant parameters of the connection service Usage flow_server_cli init [ OPTIONS ] OPTIONS parameter name required type description --host yes string The host of the connection server iflearner_flow_server --port yes string The port of the connection server iflearner_flow_server Request Example flow_server_cli init --host 127 .0.0.1 --port 1235 Request Example { \"ret_code\" : 0 , \"ret_message\" : \"success\" } Template \u00b6 create \u00b6 Create a task template Usage flow_server_cli template create [ OPTIONS ] OPTIONS parameter name rRequired type description -n, --template_name yes string Template name -r, --remark no string Template description -i, --image_url yes string Image url address of template configuration -w, --workdir no string Image workdir -c, --command no string Image startup command -hp, --hyper_parameter no string Hyperparameter passed by image startup Response parameter name type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Request Example flow_server_cli template create -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } } update \u00b6 Update a specified template Usage flow_server_cli template update [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The unique id of the template -n, --template_name yes string Template name -r, --remark no string Template description -i, --image_url yes string Image url address of template configuration -w, --workdir no string Image workdir -c, --command no string Image startup command -hp, --hyper_parameter no string Hyperparameters passed by mirror startup Response parameter name type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Request Example flow_server_cli template update -id 20f42769b99b492691da1ba2f236b1 -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\" ]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 Query a task template information Usage flow_server_cli template get [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The Unique id of the template Response parameter name type description ret_code int Return code ret_msg string Return information data.name string Template name data.remark string Template remark data.image_url string The url address of the template image data.workdir string The working directory of the template image data.command array Image startup command data.hyper_parameter array Hyperparameters for mirror startup data.template_id string The unique ID of the template data.create_time string Creation time data.modify_time string Update time Request Example flow_server_cli template get -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } } list \u00b6 Batch query template information Usage flow_server_cli template list [ OPTIONS ] OPTIONS parameter Name required type description -p, --page no int Current page, default is 1 -l, --limit no int The number of queries on the current page, default is 10 Response parameter name type description ret_code int Return code ret_msg string Return information data.templates[index].name string Template name data.templates[index].remark string Template remarks data.templates[index].image_url string The URL of template image data.templates[index].workdir string The working directory of the template image data.templates[index].command array Image startup command data.templates[index].hyper_parameter array Hyper parameters for mirror startup data.templates[index].template_id string The Unique ID of the template data.templates[index].create_time string Creation time data.templates[index].modify_time string Update time Request Example flow_server_cli template list -p 1 -l 2 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } } delete \u00b6 Delete a specified task template Usage flow_server_cli template delete [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The unique id of the template Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli template delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Task \u00b6 create \u00b6 Create task Usage flow_server_cli task create [ OPTIONS ] OPTIONS parameter name rRequired type description -n, --task_name yes string the name of task -t, --template_id yes string task-related template -r, --remark no string task remark -fd, --federate_data yes array task-related federate Response parameter name type description ret_code int Return code ret_msg string Return information data.task_id string task id Request Example flow_server_cli task create -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } update \u00b6 Update task Usage flow_server_cli task update [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id -n, --task_name yes string the name of task -t, --template_id yes string task-related template -r, --remark no string task remark -fd, --federate_data yes array task-related federate Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task update -id bbc0c30e96bc4da29b2b326fb1f8786e -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a new remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 Get task Usage flow_server_cli task get [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information data dict task detail Request Example flow_server_cli task get -id bbc0c30e96bc4da29b2b326fb1f8786e Response Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } list \u00b6 Get task list Usage flow_server_cli task list [ OPTIONS ] OPTIONS parameter Name required type description -p, --page no int Current page, default is 1 -l, --limit no int The number of queries on the current page, default is 10 Response parameter name type description ret_code int Return code ret_msg string Return information data.task_count int total task number data.tasks array task list Request Example flow_server_cli task list -p 1 -l 10 Response Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } delete \u00b6 Delete task Usage flow_server_cli task delete [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } start \u00b6 Start task Usage flow_server_cli task start [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task start -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } stop \u00b6 Stop task Usage flow_server_cli task stop [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task stop -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"FlowServerCLI"},{"location":"client/flow_server_cli/#introduction","text":"First, You can execute the following command to quickly install: pip install iflearner-flow-client Secondly, We will introduce how to interact with iflearner_flow_server using the command line tool flow_server_cli , the following are the subcommands. Usage: flow_server_cli [ OPTIONS ] COMMAND [ ARGS ] ... Iflearner Flow Server Cli. Options: -h, --help Show this message and exit. Commands: init Iflearner Server Flow Cli Init Command task Task Operations Group template Template Operations Group The specific command usage is as follows.","title":"Introduction"},{"location":"client/flow_server_cli/#initialization","text":"Before using the command line, we need to initialize the operation, mainly to configure the relevant parameters of the connection service Usage flow_server_cli init [ OPTIONS ] OPTIONS parameter name required type description --host yes string The host of the connection server iflearner_flow_server --port yes string The port of the connection server iflearner_flow_server Request Example flow_server_cli init --host 127 .0.0.1 --port 1235 Request Example { \"ret_code\" : 0 , \"ret_message\" : \"success\" }","title":"Initialization"},{"location":"client/flow_server_cli/#template","text":"","title":"Template"},{"location":"client/flow_server_cli/#create","text":"Create a task template Usage flow_server_cli template create [ OPTIONS ] OPTIONS parameter name rRequired type description -n, --template_name yes string Template name -r, --remark no string Template description -i, --image_url yes string Image url address of template configuration -w, --workdir no string Image workdir -c, --command no string Image startup command -hp, --hyper_parameter no string Hyperparameter passed by image startup Response parameter name type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Request Example flow_server_cli template create -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } }","title":"create"},{"location":"client/flow_server_cli/#update","text":"Update a specified template Usage flow_server_cli template update [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The unique id of the template -n, --template_name yes string Template name -r, --remark no string Template description -i, --image_url yes string Image url address of template configuration -w, --workdir no string Image workdir -c, --command no string Image startup command -hp, --hyper_parameter no string Hyperparameters passed by mirror startup Response parameter name type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Request Example flow_server_cli template update -id 20f42769b99b492691da1ba2f236b1 -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\" ]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"client/flow_server_cli/#get","text":"Query a task template information Usage flow_server_cli template get [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The Unique id of the template Response parameter name type description ret_code int Return code ret_msg string Return information data.name string Template name data.remark string Template remark data.image_url string The url address of the template image data.workdir string The working directory of the template image data.command array Image startup command data.hyper_parameter array Hyperparameters for mirror startup data.template_id string The unique ID of the template data.create_time string Creation time data.modify_time string Update time Request Example flow_server_cli template get -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } }","title":"get"},{"location":"client/flow_server_cli/#list","text":"Batch query template information Usage flow_server_cli template list [ OPTIONS ] OPTIONS parameter Name required type description -p, --page no int Current page, default is 1 -l, --limit no int The number of queries on the current page, default is 10 Response parameter name type description ret_code int Return code ret_msg string Return information data.templates[index].name string Template name data.templates[index].remark string Template remarks data.templates[index].image_url string The URL of template image data.templates[index].workdir string The working directory of the template image data.templates[index].command array Image startup command data.templates[index].hyper_parameter array Hyper parameters for mirror startup data.templates[index].template_id string The Unique ID of the template data.templates[index].create_time string Creation time data.templates[index].modify_time string Update time Request Example flow_server_cli template list -p 1 -l 2 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } }","title":"list"},{"location":"client/flow_server_cli/#delete","text":"Delete a specified task template Usage flow_server_cli template delete [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The unique id of the template Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli template delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"client/flow_server_cli/#task","text":"","title":"Task"},{"location":"client/flow_server_cli/#create_1","text":"Create task Usage flow_server_cli task create [ OPTIONS ] OPTIONS parameter name rRequired type description -n, --task_name yes string the name of task -t, --template_id yes string task-related template -r, --remark no string task remark -fd, --federate_data yes array task-related federate Response parameter name type description ret_code int Return code ret_msg string Return information data.task_id string task id Request Example flow_server_cli task create -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"create"},{"location":"client/flow_server_cli/#update_1","text":"Update task Usage flow_server_cli task update [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id -n, --task_name yes string the name of task -t, --template_id yes string task-related template -r, --remark no string task remark -fd, --federate_data yes array task-related federate Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task update -id bbc0c30e96bc4da29b2b326fb1f8786e -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a new remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"client/flow_server_cli/#get_1","text":"Get task Usage flow_server_cli task get [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information data dict task detail Request Example flow_server_cli task get -id bbc0c30e96bc4da29b2b326fb1f8786e Response Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"get"},{"location":"client/flow_server_cli/#list_1","text":"Get task list Usage flow_server_cli task list [ OPTIONS ] OPTIONS parameter Name required type description -p, --page no int Current page, default is 1 -l, --limit no int The number of queries on the current page, default is 10 Response parameter name type description ret_code int Return code ret_msg string Return information data.task_count int total task number data.tasks array task list Request Example flow_server_cli task list -p 1 -l 10 Response Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"list"},{"location":"client/flow_server_cli/#delete_1","text":"Delete task Usage flow_server_cli task delete [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"client/flow_server_cli/#start","text":"Start task Usage flow_server_cli task start [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task start -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"start"},{"location":"client/flow_server_cli/#stop","text":"Stop task Usage flow_server_cli task stop [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task stop -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"stop"},{"location":"client/flow_server_sdk/","text":"Introduction \u00b6 We will describe how to use the flow_server_sdk sdk library to interact with iflearner_flow_server service. Installation \u00b6 You can execute the following command to quickly install: pip install iflearner-flow-client Then you can reference the flow_server_sdk library for interface calls Initialization \u00b6 We need to initialize the operation first, mainly to complete the relevant parameters of configuring the connection service, and generate a client object. Parameters parameter required type description host yes string The host for connecting iflearner_flow_server server port yes string The port for connecting iflearner_flow_server server Usage from flow_server_sdk import FlowServerSdk # use real ip address to initialize SDK flow_server_client = FlowServerSdk ( host = \"127.0.0.1\" , port = \"1235\" ) Template \u00b6 create \u00b6 Create a task template. Function create ( cls, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters parameter required type description name yes string Template name image_url yes string Image url address of template configuration workdir yes string Image workdir command yes array Image startup command remark no string Template description hyper_parameter no array Hyper parameter passed by image startup Return parameter type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Call Example flow_server_client.template.create ( name = \"template_01\" , image_url = \"iflearner_ocr:0.0.1\" , workdir = \"/data/ocr/script\" , command =[] , remark = \"\" , hyper_parameter = [] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } } update \u00b6 Update a specified template. Function update ( cls, template_id: str, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters parameter required type description template_id yes string The id of template name yes string Template name image_url yes string Image url address of template configuration workdir yes string Image workdir command yes array Image startup command remark no string Template description hyper_parameter no array Hyper parameter passed by image startup Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.template.update ( template_id = \"20f42769b99b492691da1ba2f236b1\" , name = \"template_01\" , image_url = \"iflearner_ocr:0.0.2\" , workdir = \"/data/ocr/script\" , command =[] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 Query a specified template. Function get ( cls, template_id: str ) -> Dict [ str, Any ] Parameters parameter required type description template_id yes string The id of template Return parameter type description ret_code int Return code ret_msg string Return information data.name string Template name data.remark string Template remark data.image_url string The url address of the template image data.workdir string The working directory of the template image data.command array Image startup command data.hyper_parameter array Hyperparameters for mirror startup data.template_id string Unique ID of the template data.create_time string Template creation time data.modify_time string Template update time Call Example flow_server_client.template.get ( template_id = \"20f42769b99b492691da1ba2f236b1\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } } list \u00b6 Batch query template information Function list ( cls, keyword: str = \"\" , page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters parameter required type description page no int The current page limit no int The query num of current page Return parameter type description ret_code int Return code ret_msg string Return information data.templates[index].name string Template name data.templates[index].remark string Template remarks data.templates[index].image_url string URL of template image data.templates[index].workdir string The working directory of the template image data.templates[index].command array Image startup command data.templates[index].hyper_parameter array Hyperparameters for mirror startup data.templates[index].template_id string Unique ID of the template data.templates[index].create_time string Template creation time data.templates[index].modify_time string Template update time Call Example flow_server_client.template.list ( keyword = \"\" , page = 1 , limit = 10 ) Return Example \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } } delete \u00b6 Delete a specified template. Function delete ( cls, template_id: str ) -> Dict [ str, Any ] : Parameters parameter required type description template_id yes string The id of template Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.template.delete ( template_id = self._generate_template_id ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Task \u00b6 Create \u00b6 create task Function create ( cls, name: str, template_id: str, remark: str, federate_data: List [ Any ] , ) -> Dict [ str, Any ] Parameters parameter required type description name yes string the name of task template_id yes string task-related template remark no string task remark federate_data yes array task-related federate Return parameter type description ret_code int Return code ret_msg string Return information data.task_id string task id Call Example flow_server_client.task.create ( name = \"testCase1\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"\" }] , ) Return Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Update \u00b6 update task Function update ( cls, task_id: str, name: str, template_id: str, remark: str, federate_data: List, ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id name yes string the name of task template_id yes string task-related template remark no string task remark federate_data yes array task-related federate Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.update ( task_id = \"0578abed1032425499abd20f2ef67938\" , name = \"testCase\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"aa\" }] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Get \u00b6 get task detail Function get ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information data dict task detail Call Example flow_server_client.task.get ( \"0578abed1032425499abd20f2ef67938\" ) Return Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } List \u00b6 get task list Function list ( cls, page: int, limit: int ) -> Dict [ str, Any ] Parameters parameter required type description page yes int page index limit yes int page size Return parameter type description ret_code int Return code ret_msg string Return information data.task_count int total task number data.tasks array task list Call Example flow_server_client.task.list ( 1 , 10 ) Return Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Delete \u00b6 delete task Function delete ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.delete ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Start \u00b6 start task Function start ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.start ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Stop \u00b6 stop task Function stop ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.stop ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"FlowServerSDK"},{"location":"client/flow_server_sdk/#introduction","text":"We will describe how to use the flow_server_sdk sdk library to interact with iflearner_flow_server service.","title":"Introduction"},{"location":"client/flow_server_sdk/#installation","text":"You can execute the following command to quickly install: pip install iflearner-flow-client Then you can reference the flow_server_sdk library for interface calls","title":"Installation"},{"location":"client/flow_server_sdk/#initialization","text":"We need to initialize the operation first, mainly to complete the relevant parameters of configuring the connection service, and generate a client object. Parameters parameter required type description host yes string The host for connecting iflearner_flow_server server port yes string The port for connecting iflearner_flow_server server Usage from flow_server_sdk import FlowServerSdk # use real ip address to initialize SDK flow_server_client = FlowServerSdk ( host = \"127.0.0.1\" , port = \"1235\" )","title":"Initialization"},{"location":"client/flow_server_sdk/#template","text":"","title":"Template"},{"location":"client/flow_server_sdk/#create","text":"Create a task template. Function create ( cls, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters parameter required type description name yes string Template name image_url yes string Image url address of template configuration workdir yes string Image workdir command yes array Image startup command remark no string Template description hyper_parameter no array Hyper parameter passed by image startup Return parameter type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Call Example flow_server_client.template.create ( name = \"template_01\" , image_url = \"iflearner_ocr:0.0.1\" , workdir = \"/data/ocr/script\" , command =[] , remark = \"\" , hyper_parameter = [] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } }","title":"create"},{"location":"client/flow_server_sdk/#update","text":"Update a specified template. Function update ( cls, template_id: str, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters parameter required type description template_id yes string The id of template name yes string Template name image_url yes string Image url address of template configuration workdir yes string Image workdir command yes array Image startup command remark no string Template description hyper_parameter no array Hyper parameter passed by image startup Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.template.update ( template_id = \"20f42769b99b492691da1ba2f236b1\" , name = \"template_01\" , image_url = \"iflearner_ocr:0.0.2\" , workdir = \"/data/ocr/script\" , command =[] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"client/flow_server_sdk/#get","text":"Query a specified template. Function get ( cls, template_id: str ) -> Dict [ str, Any ] Parameters parameter required type description template_id yes string The id of template Return parameter type description ret_code int Return code ret_msg string Return information data.name string Template name data.remark string Template remark data.image_url string The url address of the template image data.workdir string The working directory of the template image data.command array Image startup command data.hyper_parameter array Hyperparameters for mirror startup data.template_id string Unique ID of the template data.create_time string Template creation time data.modify_time string Template update time Call Example flow_server_client.template.get ( template_id = \"20f42769b99b492691da1ba2f236b1\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } }","title":"get"},{"location":"client/flow_server_sdk/#list","text":"Batch query template information Function list ( cls, keyword: str = \"\" , page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters parameter required type description page no int The current page limit no int The query num of current page Return parameter type description ret_code int Return code ret_msg string Return information data.templates[index].name string Template name data.templates[index].remark string Template remarks data.templates[index].image_url string URL of template image data.templates[index].workdir string The working directory of the template image data.templates[index].command array Image startup command data.templates[index].hyper_parameter array Hyperparameters for mirror startup data.templates[index].template_id string Unique ID of the template data.templates[index].create_time string Template creation time data.templates[index].modify_time string Template update time Call Example flow_server_client.template.list ( keyword = \"\" , page = 1 , limit = 10 ) Return Example \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } }","title":"list"},{"location":"client/flow_server_sdk/#delete","text":"Delete a specified template. Function delete ( cls, template_id: str ) -> Dict [ str, Any ] : Parameters parameter required type description template_id yes string The id of template Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.template.delete ( template_id = self._generate_template_id ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"client/flow_server_sdk/#task","text":"","title":"Task"},{"location":"client/flow_server_sdk/#create_1","text":"create task Function create ( cls, name: str, template_id: str, remark: str, federate_data: List [ Any ] , ) -> Dict [ str, Any ] Parameters parameter required type description name yes string the name of task template_id yes string task-related template remark no string task remark federate_data yes array task-related federate Return parameter type description ret_code int Return code ret_msg string Return information data.task_id string task id Call Example flow_server_client.task.create ( name = \"testCase1\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"\" }] , ) Return Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Create"},{"location":"client/flow_server_sdk/#update_1","text":"update task Function update ( cls, task_id: str, name: str, template_id: str, remark: str, federate_data: List, ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id name yes string the name of task template_id yes string task-related template remark no string task remark federate_data yes array task-related federate Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.update ( task_id = \"0578abed1032425499abd20f2ef67938\" , name = \"testCase\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"aa\" }] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Update"},{"location":"client/flow_server_sdk/#get_1","text":"get task detail Function get ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information data dict task detail Call Example flow_server_client.task.get ( \"0578abed1032425499abd20f2ef67938\" ) Return Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Get"},{"location":"client/flow_server_sdk/#list_1","text":"get task list Function list ( cls, page: int, limit: int ) -> Dict [ str, Any ] Parameters parameter required type description page yes int page index limit yes int page size Return parameter type description ret_code int Return code ret_msg string Return information data.task_count int total task number data.tasks array task list Call Example flow_server_client.task.list ( 1 , 10 ) Return Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"List"},{"location":"client/flow_server_sdk/#delete_1","text":"delete task Function delete ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.delete ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Delete"},{"location":"client/flow_server_sdk/#start","text":"start task Function start ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.start ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Start"},{"location":"client/flow_server_sdk/#stop","text":"stop task Function stop ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.stop ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Stop"},{"location":"client/cli/flow_federate/task/","text":"Task \u00b6","title":"Task"},{"location":"client/cli/flow_federate/task/#task","text":"","title":"Task"},{"location":"client/cli/flow_server/task/","text":"Task \u00b6 create \u00b6 Create task Usage flow_server_cli task create [ OPTIONS ] OPTIONS parameter name rRequired type description -n, --task_name yes string the name of task -t, --template_id yes string task-related template -r, --remark no string task remark -fd, --federate_data yes array task-related federate Response parameter name type description ret_code int Return code ret_msg string Return information data.task_id string task id Request Example flow_server_cli task create -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } update \u00b6 Update task Usage flow_server_cli task update [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id -n, --task_name yes string the name of task -t, --template_id yes string task-related template -r, --remark no string task remark -fd, --federate_data yes array task-related federate Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task update -id bbc0c30e96bc4da29b2b326fb1f8786e -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a new remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 Get task Usage flow_server_cli task get [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information data dict task detail Request Example flow_server_cli task get -id bbc0c30e96bc4da29b2b326fb1f8786e Response Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } list \u00b6 Get task list Usage flow_server_cli task list [ OPTIONS ] OPTIONS parameter Name required type description -p, --page no int Current page, default is 1 -l, --limit no int The number of queries on the current page, default is 10 Response parameter name type description ret_code int Return code ret_msg string Return information data.task_count int total task number data.tasks array task list Request Example flow_server_cli task list -p 1 -l 10 Response Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } delete \u00b6 Delete task Usage flow_server_cli task delete [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } start \u00b6 Start task Usage flow_server_cli task start [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task start -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } stop \u00b6 Stop task Usage flow_server_cli task stop [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task stop -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Task"},{"location":"client/cli/flow_server/task/#task","text":"","title":"Task"},{"location":"client/cli/flow_server/task/#create","text":"Create task Usage flow_server_cli task create [ OPTIONS ] OPTIONS parameter name rRequired type description -n, --task_name yes string the name of task -t, --template_id yes string task-related template -r, --remark no string task remark -fd, --federate_data yes array task-related federate Response parameter name type description ret_code int Return code ret_msg string Return information data.task_id string task id Request Example flow_server_cli task create -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"create"},{"location":"client/cli/flow_server/task/#update","text":"Update task Usage flow_server_cli task update [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id -n, --task_name yes string the name of task -t, --template_id yes string task-related template -r, --remark no string task remark -fd, --federate_data yes array task-related federate Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task update -id bbc0c30e96bc4da29b2b326fb1f8786e -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a new remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"client/cli/flow_server/task/#get","text":"Get task Usage flow_server_cli task get [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information data dict task detail Request Example flow_server_cli task get -id bbc0c30e96bc4da29b2b326fb1f8786e Response Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"get"},{"location":"client/cli/flow_server/task/#list","text":"Get task list Usage flow_server_cli task list [ OPTIONS ] OPTIONS parameter Name required type description -p, --page no int Current page, default is 1 -l, --limit no int The number of queries on the current page, default is 10 Response parameter name type description ret_code int Return code ret_msg string Return information data.task_count int total task number data.tasks array task list Request Example flow_server_cli task list -p 1 -l 10 Response Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"list"},{"location":"client/cli/flow_server/task/#delete","text":"Delete task Usage flow_server_cli task delete [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"client/cli/flow_server/task/#start","text":"Start task Usage flow_server_cli task start [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task start -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"start"},{"location":"client/cli/flow_server/task/#stop","text":"Stop task Usage flow_server_cli task stop [ OPTIONS ] OPTIONS parameter Name required type description -id, --task_id yes string task id Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli task stop -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"stop"},{"location":"client/cli/flow_server/template/","text":"Template \u00b6 create \u00b6 Create a task template Usage flow_server_cli template create [ OPTIONS ] OPTIONS parameter name rRequired type description -n, --template_name yes string Template name -r, --remark no string Template description -i, --image_url yes string Image url address of template configuration -w, --workdir no string Image workdir -c, --command no string Image startup command -hp, --hyper_parameter no string Hyperparameter passed by image startup Response parameter name type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Request Example flow_server_cli template create -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } } update \u00b6 Update a specified template Usage flow_server_cli template update [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The unique id of the template -n, --template_name yes string Template name -r, --remark no string Template description -i, --image_url yes string Image url address of template configuration -w, --workdir no string Image workdir -c, --command no string Image startup command -hp, --hyper_parameter no string Hyperparameters passed by mirror startup Response parameter name type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Request Example flow_server_cli template update -id 20f42769b99b492691da1ba2f236b1 -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\" ]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 Query a task template information Usage flow_server_cli template get [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The Unique id of the template Response parameter name type description ret_code int Return code ret_msg string Return information data.name string Template name data.remark string Template remark data.image_url string The url address of the template image data.workdir string The working directory of the template image data.command array Image startup command data.hyper_parameter array Hyperparameters for mirror startup data.template_id string The unique ID of the template data.create_time string Creation time data.modify_time string Update time Request Example flow_server_cli template get -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } } list \u00b6 Batch query template information Usage flow_server_cli template list [ OPTIONS ] OPTIONS parameter Name required type description -p, --page no int Current page, default is 1 -l, --limit no int The number of queries on the current page, default is 10 Response parameter name type description ret_code int Return code ret_msg string Return information data.templates[index].name string Template name data.templates[index].remark string Template remarks data.templates[index].image_url string The URL of template image data.templates[index].workdir string The working directory of the template image data.templates[index].command array Image startup command data.templates[index].hyper_parameter array Hyper parameters for mirror startup data.templates[index].template_id string The Unique ID of the template data.templates[index].create_time string Creation time data.templates[index].modify_time string Update time Request Example flow_server_cli template list -p 1 -l 2 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } } delete \u00b6 Delete a specified task template Usage flow_server_cli template delete [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The unique id of the template Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli template delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Template"},{"location":"client/cli/flow_server/template/#template","text":"","title":"Template"},{"location":"client/cli/flow_server/template/#create","text":"Create a task template Usage flow_server_cli template create [ OPTIONS ] OPTIONS parameter name rRequired type description -n, --template_name yes string Template name -r, --remark no string Template description -i, --image_url yes string Image url address of template configuration -w, --workdir no string Image workdir -c, --command no string Image startup command -hp, --hyper_parameter no string Hyperparameter passed by image startup Response parameter name type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Request Example flow_server_cli template create -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } }","title":"create"},{"location":"client/cli/flow_server/template/#update","text":"Update a specified template Usage flow_server_cli template update [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The unique id of the template -n, --template_name yes string Template name -r, --remark no string Template description -i, --image_url yes string Image url address of template configuration -w, --workdir no string Image workdir -c, --command no string Image startup command -hp, --hyper_parameter no string Hyperparameters passed by mirror startup Response parameter name type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Request Example flow_server_cli template update -id 20f42769b99b492691da1ba2f236b1 -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\" ]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"client/cli/flow_server/template/#get","text":"Query a task template information Usage flow_server_cli template get [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The Unique id of the template Response parameter name type description ret_code int Return code ret_msg string Return information data.name string Template name data.remark string Template remark data.image_url string The url address of the template image data.workdir string The working directory of the template image data.command array Image startup command data.hyper_parameter array Hyperparameters for mirror startup data.template_id string The unique ID of the template data.create_time string Creation time data.modify_time string Update time Request Example flow_server_cli template get -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } }","title":"get"},{"location":"client/cli/flow_server/template/#list","text":"Batch query template information Usage flow_server_cli template list [ OPTIONS ] OPTIONS parameter Name required type description -p, --page no int Current page, default is 1 -l, --limit no int The number of queries on the current page, default is 10 Response parameter name type description ret_code int Return code ret_msg string Return information data.templates[index].name string Template name data.templates[index].remark string Template remarks data.templates[index].image_url string The URL of template image data.templates[index].workdir string The working directory of the template image data.templates[index].command array Image startup command data.templates[index].hyper_parameter array Hyper parameters for mirror startup data.templates[index].template_id string The Unique ID of the template data.templates[index].create_time string Creation time data.templates[index].modify_time string Update time Request Example flow_server_cli template list -p 1 -l 2 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } }","title":"list"},{"location":"client/cli/flow_server/template/#delete","text":"Delete a specified task template Usage flow_server_cli template delete [ OPTIONS ] OPTIONS parameter Name required type description -id, --template_id yes string The unique id of the template Response parameter name type description ret_code int Return code ret_msg string Return information Request Example flow_server_cli template delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"client/sdk/flow_federate/task/","text":"Task \u00b6","title":"Task"},{"location":"client/sdk/flow_federate/task/#task","text":"","title":"Task"},{"location":"client/sdk/flow_server/task/","text":"Task \u00b6 Create \u00b6 create task Function create ( cls, name: str, template_id: str, remark: str, federate_data: List [ Any ] , ) -> Dict [ str, Any ] Parameters parameter required type description name yes string the name of task template_id yes string task-related template remark no string task remark federate_data yes array task-related federate Return parameter type description ret_code int Return code ret_msg string Return information data.task_id string task id Call Example flow_server_client.task.create ( name = \"testCase1\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"\" }] , ) Return Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Update \u00b6 update task Function update ( cls, task_id: str, name: str, template_id: str, remark: str, federate_data: List, ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id name yes string the name of task template_id yes string task-related template remark no string task remark federate_data yes array task-related federate Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.update ( task_id = \"0578abed1032425499abd20f2ef67938\" , name = \"testCase\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"aa\" }] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Get \u00b6 get task detail Function get ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information data dict task detail Call Example flow_server_client.task.get ( \"0578abed1032425499abd20f2ef67938\" ) Return Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } List \u00b6 get task list Function list ( cls, page: int, limit: int ) -> Dict [ str, Any ] Parameters parameter required type description page yes int page index limit yes int page size Return parameter type description ret_code int Return code ret_msg string Return information data.task_count int total task number data.tasks array task list Call Example flow_server_client.task.list ( 1 , 10 ) Return Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Delete \u00b6 delete task Function delete ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.delete ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Start \u00b6 start task Function start ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.start ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Stop \u00b6 stop task Function stop ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.stop ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Task"},{"location":"client/sdk/flow_server/task/#task","text":"","title":"Task"},{"location":"client/sdk/flow_server/task/#create","text":"create task Function create ( cls, name: str, template_id: str, remark: str, federate_data: List [ Any ] , ) -> Dict [ str, Any ] Parameters parameter required type description name yes string the name of task template_id yes string task-related template remark no string task remark federate_data yes array task-related federate Return parameter type description ret_code int Return code ret_msg string Return information data.task_id string task id Call Example flow_server_client.task.create ( name = \"testCase1\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"\" }] , ) Return Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Create"},{"location":"client/sdk/flow_server/task/#update","text":"update task Function update ( cls, task_id: str, name: str, template_id: str, remark: str, federate_data: List, ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id name yes string the name of task template_id yes string task-related template remark no string task remark federate_data yes array task-related federate Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.update ( task_id = \"0578abed1032425499abd20f2ef67938\" , name = \"testCase\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"aa\" }] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Update"},{"location":"client/sdk/flow_server/task/#get","text":"get task detail Function get ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information data dict task detail Call Example flow_server_client.task.get ( \"0578abed1032425499abd20f2ef67938\" ) Return Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Get"},{"location":"client/sdk/flow_server/task/#list","text":"get task list Function list ( cls, page: int, limit: int ) -> Dict [ str, Any ] Parameters parameter required type description page yes int page index limit yes int page size Return parameter type description ret_code int Return code ret_msg string Return information data.task_count int total task number data.tasks array task list Call Example flow_server_client.task.list ( 1 , 10 ) Return Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"List"},{"location":"client/sdk/flow_server/task/#delete","text":"delete task Function delete ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.delete ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Delete"},{"location":"client/sdk/flow_server/task/#start","text":"start task Function start ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.start ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Start"},{"location":"client/sdk/flow_server/task/#stop","text":"stop task Function stop ( cls, task_id: str ) -> Dict [ str, Any ] Parameters parameter required type description task_id yes string task id Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.task.stop ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Stop"},{"location":"client/sdk/flow_server/template/","text":"Template \u00b6 create \u00b6 Create a task template. Function create ( cls, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters parameter required type description name yes string Template name image_url yes string Image url address of template configuration workdir yes string Image workdir command yes array Image startup command remark no string Template description hyper_parameter no array Hyper parameter passed by image startup Return parameter type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Call Example flow_server_client.template.create ( name = \"template_01\" , image_url = \"iflearner_ocr:0.0.1\" , workdir = \"/data/ocr/script\" , command =[] , remark = \"\" , hyper_parameter = [] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } } update \u00b6 Update a specified template. Function update ( cls, template_id: str, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters parameter required type description template_id yes string The id of template name yes string Template name image_url yes string Image url address of template configuration workdir yes string Image workdir command yes array Image startup command remark no string Template description hyper_parameter no array Hyper parameter passed by image startup Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.template.update ( template_id = \"20f42769b99b492691da1ba2f236b1\" , name = \"template_01\" , image_url = \"iflearner_ocr:0.0.2\" , workdir = \"/data/ocr/script\" , command =[] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 Query a specified template. Function get ( cls, template_id: str ) -> Dict [ str, Any ] Parameters parameter required type description template_id yes string The id of template Return parameter type description ret_code int Return code ret_msg string Return information data.name string Template name data.remark string Template remark data.image_url string The url address of the template image data.workdir string The working directory of the template image data.command array Image startup command data.hyper_parameter array Hyperparameters for mirror startup data.template_id string Unique ID of the template data.create_time string Template creation time data.modify_time string Template update time Call Example flow_server_client.template.get ( template_id = \"20f42769b99b492691da1ba2f236b1\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } } list \u00b6 Batch query template information Function list ( cls, keyword: str = \"\" , page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters parameter required type description page no int The current page limit no int The query num of current page Return parameter type description ret_code int Return code ret_msg string Return information data.templates[index].name string Template name data.templates[index].remark string Template remarks data.templates[index].image_url string URL of template image data.templates[index].workdir string The working directory of the template image data.templates[index].command array Image startup command data.templates[index].hyper_parameter array Hyperparameters for mirror startup data.templates[index].template_id string Unique ID of the template data.templates[index].create_time string Template creation time data.templates[index].modify_time string Template update time Call Example flow_server_client.template.list ( keyword = \"\" , page = 1 , limit = 10 ) Return Example \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } } delete \u00b6 Delete a specified template. Function delete ( cls, template_id: str ) -> Dict [ str, Any ] : Parameters parameter required type description template_id yes string The id of template Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.template.delete ( template_id = self._generate_template_id ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Template"},{"location":"client/sdk/flow_server/template/#template","text":"","title":"Template"},{"location":"client/sdk/flow_server/template/#create","text":"Create a task template. Function create ( cls, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters parameter required type description name yes string Template name image_url yes string Image url address of template configuration workdir yes string Image workdir command yes array Image startup command remark no string Template description hyper_parameter no array Hyper parameter passed by image startup Return parameter type description ret_code int Return code ret_msg string Return information data.template_id string Generated template id Call Example flow_server_client.template.create ( name = \"template_01\" , image_url = \"iflearner_ocr:0.0.1\" , workdir = \"/data/ocr/script\" , command =[] , remark = \"\" , hyper_parameter = [] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } }","title":"create"},{"location":"client/sdk/flow_server/template/#update","text":"Update a specified template. Function update ( cls, template_id: str, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters parameter required type description template_id yes string The id of template name yes string Template name image_url yes string Image url address of template configuration workdir yes string Image workdir command yes array Image startup command remark no string Template description hyper_parameter no array Hyper parameter passed by image startup Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.template.update ( template_id = \"20f42769b99b492691da1ba2f236b1\" , name = \"template_01\" , image_url = \"iflearner_ocr:0.0.2\" , workdir = \"/data/ocr/script\" , command =[] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"client/sdk/flow_server/template/#get","text":"Query a specified template. Function get ( cls, template_id: str ) -> Dict [ str, Any ] Parameters parameter required type description template_id yes string The id of template Return parameter type description ret_code int Return code ret_msg string Return information data.name string Template name data.remark string Template remark data.image_url string The url address of the template image data.workdir string The working directory of the template image data.command array Image startup command data.hyper_parameter array Hyperparameters for mirror startup data.template_id string Unique ID of the template data.create_time string Template creation time data.modify_time string Template update time Call Example flow_server_client.template.get ( template_id = \"20f42769b99b492691da1ba2f236b1\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } }","title":"get"},{"location":"client/sdk/flow_server/template/#list","text":"Batch query template information Function list ( cls, keyword: str = \"\" , page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters parameter required type description page no int The current page limit no int The query num of current page Return parameter type description ret_code int Return code ret_msg string Return information data.templates[index].name string Template name data.templates[index].remark string Template remarks data.templates[index].image_url string URL of template image data.templates[index].workdir string The working directory of the template image data.templates[index].command array Image startup command data.templates[index].hyper_parameter array Hyperparameters for mirror startup data.templates[index].template_id string Unique ID of the template data.templates[index].create_time string Template creation time data.templates[index].modify_time string Template update time Call Example flow_server_client.template.list ( keyword = \"\" , page = 1 , limit = 10 ) Return Example \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } }","title":"list"},{"location":"client/sdk/flow_server/template/#delete","text":"Delete a specified template. Function delete ( cls, template_id: str ) -> Dict [ str, Any ] : Parameters parameter required type description template_id yes string The id of template Return parameter type description ret_code int Return code ret_msg string Return information Call Example flow_server_client.template.delete ( template_id = self._generate_template_id ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"faq/installation/","text":"Installation FAQ \u00b6","title":"Deploy"},{"location":"faq/installation/#installation-faq","text":"","title":"Installation FAQ"},{"location":"installation/offline_on_kubernetes_installation/","text":"Offline Installation \u00b6","title":"OfflineOnKubernetes"},{"location":"installation/offline_on_kubernetes_installation/#offline-installation","text":"","title":"Offline Installation"},{"location":"installation/online_on_kubernetes_installation/","text":"Deploy iflearner-flow on the kubernetes cluster \u00b6 1. General introduction \u00b6 1.1 System introduction \u00b6 Iflearner Flow is a multi-party joint task security scheduling platform based on the underlying federated learning framework Iflearner, which models horizontal federated learning scenarios. 1.2 Component Description \u00b6 Server side Component Version Description kubernetes 1.18 Container orchestration cluster, flow-server dependency mysql 5.7 data storage, flow-server dependency ifleaner-flow-server 0.1.0 server-side scheduling component ifleaner-operator 0.0.1 kubernetes crd contorller Federate side Component Version Description kubernetes 1.18 Container orchestration cluster, flow-server dependency mysql 5.7 data storage, flow-server dependency ifleaner-flow-federate 0.1.0 federate-side scheduling component ifleaner-operator 0.0.1 kubernetes crd contorller 1.3 System Design \u00b6 Iflearner Flow Design 2. Detailed design \u00b6 2.1 Deployment Planning \u00b6 In this example, for the convenience of demonstration, there is only one host on the service side, and the federation side. In fact, relying on kubernetes, the cluster size on each side can be freely expanded. Service side IP Address Operating System Host Configuration Storage Deployment Modules 172.31.0.1 CentOS 7.4 16C32G 100G kubernetes, mysql, iflearner-flow-server Federal side Federation IP Addresses Operating Systems Host Configuration Storage Deployment Modules Federation 1 172.31.0.2 CentOS 7.4 16C32G, one GPU card (not required) 100G kubernetes, mysql, iflearner-flow-server, iflearner-opeartor Federation 2 172.31.0.3 CentOS 7.4 16C32G, one GPU card (not required) 100G kubernetes, mysql, iflearner-flow-federate, iflearner-opeartor > Only the scene with only two federations is demonstrated here, which can be expanded freely 2.2 Host resources and operating system requirements \u00b6 Category Description Host configuration Not less than 8C, 31G, 50G, Gigabit network card, preferably GPU card for training acceleration Operating System CentOS linux 7.4 and above File System 1. The persistent data disk is mounted in the /data directory by default. 2. The free space of the root directory is not less than 20G. System Parameters 1. The number of file handles is not less than 65535. 2. The number of user processes is not less than 65535. 2.3 Network Requirements \u00b6 Category Description Firewall Policy 1. Firewall devices need to support long connections and unlimited connections. 3. Project deployment (deployment in real scenarios) \u00b6 In a real scenario, all parties are isolated and need to deploy a set of kubernetes clusters. 3.1 Deployment Diagram \u00b6 3.2 Service side deployment \u00b6 3.2.1 Deploy kubernetes \u00b6 Recommend a minimalist one-click deployment method sealos Currently supported version is 1.18 3.2.2 Deploy iflearner-operator \u00b6 See iflearner-operator 3.2.3 Deploy iflearner-flow-server \u00b6 We provide a minimalist deployment method, please refer to flow-server deployment and operation guide 3.3 Federal side deployment \u00b6 The implementation steps of each federal party are consistent, and the following are the implementation steps under a single federal party 3.3.1 Deploy kubernetes \u00b6 Recommend a minimalist one-click deployment method sealos Currently supported version is 1.18 3.3.2 Deploy iflearner-operator \u00b6 See iflearner-operator 3.3.3 Deploy iflearner-flow-federate \u00b6 We provide a minimalist deployment method, please refer to flow-federate deployment and operation guide 4. Project deployment (deployment under test and verification scenarios) \u00b6 In the test and verification scenario, we can reuse a set of kubernetes clusters and perform test verification under the same cluster. 4.1 Deployment Diagram \u00b6","title":"OnlineOnKubernetes"},{"location":"installation/online_on_kubernetes_installation/#deploy-iflearner-flow-on-the-kubernetes-cluster","text":"","title":"Deploy iflearner-flow on the kubernetes cluster"},{"location":"installation/online_on_kubernetes_installation/#1-general-introduction","text":"","title":"1. General introduction"},{"location":"installation/online_on_kubernetes_installation/#11-system-introduction","text":"Iflearner Flow is a multi-party joint task security scheduling platform based on the underlying federated learning framework Iflearner, which models horizontal federated learning scenarios.","title":"1.1 System introduction"},{"location":"installation/online_on_kubernetes_installation/#12-component-description","text":"Server side Component Version Description kubernetes 1.18 Container orchestration cluster, flow-server dependency mysql 5.7 data storage, flow-server dependency ifleaner-flow-server 0.1.0 server-side scheduling component ifleaner-operator 0.0.1 kubernetes crd contorller Federate side Component Version Description kubernetes 1.18 Container orchestration cluster, flow-server dependency mysql 5.7 data storage, flow-server dependency ifleaner-flow-federate 0.1.0 federate-side scheduling component ifleaner-operator 0.0.1 kubernetes crd contorller","title":"1.2 Component Description"},{"location":"installation/online_on_kubernetes_installation/#13-system-design","text":"Iflearner Flow Design","title":"1.3 System Design"},{"location":"installation/online_on_kubernetes_installation/#2-detailed-design","text":"","title":"2. Detailed design"},{"location":"installation/online_on_kubernetes_installation/#21-deployment-planning","text":"In this example, for the convenience of demonstration, there is only one host on the service side, and the federation side. In fact, relying on kubernetes, the cluster size on each side can be freely expanded. Service side IP Address Operating System Host Configuration Storage Deployment Modules 172.31.0.1 CentOS 7.4 16C32G 100G kubernetes, mysql, iflearner-flow-server Federal side Federation IP Addresses Operating Systems Host Configuration Storage Deployment Modules Federation 1 172.31.0.2 CentOS 7.4 16C32G, one GPU card (not required) 100G kubernetes, mysql, iflearner-flow-server, iflearner-opeartor Federation 2 172.31.0.3 CentOS 7.4 16C32G, one GPU card (not required) 100G kubernetes, mysql, iflearner-flow-federate, iflearner-opeartor > Only the scene with only two federations is demonstrated here, which can be expanded freely","title":"2.1 Deployment Planning"},{"location":"installation/online_on_kubernetes_installation/#22-host-resources-and-operating-system-requirements","text":"Category Description Host configuration Not less than 8C, 31G, 50G, Gigabit network card, preferably GPU card for training acceleration Operating System CentOS linux 7.4 and above File System 1. The persistent data disk is mounted in the /data directory by default. 2. The free space of the root directory is not less than 20G. System Parameters 1. The number of file handles is not less than 65535. 2. The number of user processes is not less than 65535.","title":"2.2 Host resources and operating system requirements"},{"location":"installation/online_on_kubernetes_installation/#23-network-requirements","text":"Category Description Firewall Policy 1. Firewall devices need to support long connections and unlimited connections.","title":"2.3 Network Requirements"},{"location":"installation/online_on_kubernetes_installation/#3-project-deployment-deployment-in-real-scenarios","text":"In a real scenario, all parties are isolated and need to deploy a set of kubernetes clusters.","title":"3. Project deployment (deployment in real scenarios)"},{"location":"installation/online_on_kubernetes_installation/#31-deployment-diagram","text":"","title":"3.1 Deployment Diagram"},{"location":"installation/online_on_kubernetes_installation/#32-service-side-deployment","text":"","title":"3.2 Service side deployment"},{"location":"installation/online_on_kubernetes_installation/#321-deploy-kubernetes","text":"Recommend a minimalist one-click deployment method sealos Currently supported version is 1.18","title":"3.2.1 Deploy kubernetes"},{"location":"installation/online_on_kubernetes_installation/#322-deploy-iflearner-operator","text":"See iflearner-operator","title":"3.2.2 Deploy iflearner-operator"},{"location":"installation/online_on_kubernetes_installation/#323-deploy-iflearner-flow-server","text":"We provide a minimalist deployment method, please refer to flow-server deployment and operation guide","title":"3.2.3 Deploy iflearner-flow-server"},{"location":"installation/online_on_kubernetes_installation/#33-federal-side-deployment","text":"The implementation steps of each federal party are consistent, and the following are the implementation steps under a single federal party","title":"3.3 Federal side deployment"},{"location":"installation/online_on_kubernetes_installation/#331-deploy-kubernetes","text":"Recommend a minimalist one-click deployment method sealos Currently supported version is 1.18","title":"3.3.1 Deploy kubernetes"},{"location":"installation/online_on_kubernetes_installation/#332-deploy-iflearner-operator","text":"See iflearner-operator","title":"3.3.2 Deploy iflearner-operator"},{"location":"installation/online_on_kubernetes_installation/#333-deploy-iflearner-flow-federate","text":"We provide a minimalist deployment method, please refer to flow-federate deployment and operation guide","title":"3.3.3 Deploy iflearner-flow-federate"},{"location":"installation/online_on_kubernetes_installation/#4-project-deployment-deployment-under-test-and-verification-scenarios","text":"In the test and verification scenario, we can reuse a set of kubernetes clusters and perform test verification under the same cluster.","title":"4. Project deployment (deployment under test and verification scenarios)"},{"location":"installation/online_on_kubernetes_installation/#41-deployment-diagram","text":"","title":"4.1 Deployment Diagram"},{"location":"quick_start/mnist/","text":"QuickStart \u00b6","title":"QuickStartMnist"},{"location":"quick_start/mnist/#quickstart","text":"","title":"QuickStart"},{"location":"tutorial/dev_manual/","text":"DEV MANUAL \u00b6","title":"DevelopmentManual"},{"location":"tutorial/dev_manual/#dev-manual","text":"","title":"DEV MANUAL"},{"location":"tutorial/system_arch/","text":"Iflearner Flow Design \u00b6 Summary \u00b6 There are two roles in horizontal federated learning, server and participant. The architecture is as follows: Each party should train the model with its own local data and upload the model parameters or gradients to the server every epoch. When the server receives data from the parties, the server handles the aggregation operation. The server then sends the aggregated data to each party, and each party starts a new epoch of training. Component \u00b6 Iflearner Flow has two components, iflearner-flow-server and iflearner-flow-federate. These components run on kubernetes and depend on the iflearner-operator component. The detailed functions are as follows: Implement \u00b6 There are four main source codes in the python directory: iflearner_flow_client sdk It provides a python package of http API for easy development and integration. cli It is a command tool, basesd on sdk. iflearner_flow_federate Client source code iflearner_flow_server Server source code iflearner_job It encapsulates operations on the kubernetes IflearnerJob object, which is provided by iflearner-operator.","title":"SystemArch"},{"location":"tutorial/system_arch/#iflearner-flow-design","text":"","title":"Iflearner Flow Design"},{"location":"tutorial/system_arch/#summary","text":"There are two roles in horizontal federated learning, server and participant. The architecture is as follows: Each party should train the model with its own local data and upload the model parameters or gradients to the server every epoch. When the server receives data from the parties, the server handles the aggregation operation. The server then sends the aggregated data to each party, and each party starts a new epoch of training.","title":"Summary"},{"location":"tutorial/system_arch/#component","text":"Iflearner Flow has two components, iflearner-flow-server and iflearner-flow-federate. These components run on kubernetes and depend on the iflearner-operator component. The detailed functions are as follows:","title":"Component"},{"location":"tutorial/system_arch/#implement","text":"There are four main source codes in the python directory: iflearner_flow_client sdk It provides a python package of http API for easy development and integration. cli It is a command tool, basesd on sdk. iflearner_flow_federate Client source code iflearner_flow_server Server source code iflearner_job It encapsulates operations on the kubernetes IflearnerJob object, which is provided by iflearner-operator.","title":"Implement"},{"location":"tutorial/system_arch_zh/","text":"Iflearner Flow\u8bbe\u8ba1\u6587\u6863 \u00b6 \u6982\u8ff0 \u00b6 \u6a2a\u5411\u8054\u90a6\u5b66\u4e60\u53ef\u5206\u4e3a\u4e24\u79cd\u89d2\u8272\uff0c\u8054\u90a6\u670d\u52a1\u7aef\u548c\u8054\u90a6\u53c2\u4e0e\u65b9\uff0c\u67b6\u6784\u56fe\u5982\u4e0b\uff1a \u53c2\u4e0e\u65b9\u7528\u81ea\u5df1\u672c\u5730\u7684\u6570\u636e\u8bad\u7ec3\u6a21\u578b\uff0c\u7136\u540e\u5728\u6bcf\u8f6e\u8bad\u7ec3\u4e2d\u4e0a\u4f20\u6a21\u578b\u53c2\u6570\u6216\u8005\u68af\u5ea6\u5230\u670d\u52a1\u7aef\u3002\u670d\u52a1\u7aef\u63a5\u6536\u53c2\u4e0e\u65b9\u4e0a\u4f20\u4e0a\u6765\u7684\u6570\u636e\uff0c\u5e76\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\uff0c\u7136\u540e\u518d\u5c06\u805a\u5408\u540e\u7684\u6570\u636e\u4e0b\u53d1\u7ed9\u53c2\u4e0e\u65b9\u3002\u53c2\u4e0e\u65b9\u968f\u540e\u5f00\u542f\u65b0\u4e00\u8f6e\u7684\u8bad\u7ec3\u3002 \u7ec4\u4ef6 \u00b6 Iflearner Flow\u5206\u4e3a\u670d\u52a1\u7aef\uff08iflearner-flow-server\uff09\u548c\u5ba2\u6237\u7aef\uff08iflearner-flow-federate\uff09\u4e24\u4e2a\u7ec4\u4ef6\uff0c\u7ec4\u4ef6\u5747\u53ef\u8fd0\u884c\u5728kubernetes\u4e4b\u4e0a\uff0c\u5e76\u4f9d\u8d56iflearner-operator\u7ec4\u4ef6\uff0c\u5177\u4f53\u7684\u529f\u80fd\u5982\u4e0b\uff1a \u5b9e\u73b0 \u00b6 \u5728python\u76ee\u5f55\u4e0b\u6709\u56db\u4e2a\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\uff1a iflearner_flow_client sdk \u63d0\u4f9b\u4e86\u5bf9\u5e94http\u63a5\u53e3\u7684python\u5305\uff0c\u65b9\u4fbf\u5f00\u53d1\u96c6\u6210\u3002 cli \u57fa\u4e8esdk\uff0c\u63d0\u4f9b\u4e86\u547d\u4ee4\u884c\u5de5\u5177\u3002 iflearner_flow_federate \u5ba2\u6237\u7aef\u7684\u4ee3\u7801 iflearner_flow_server \u670d\u52a1\u7aef\u4ee3\u7801 iflearner_job \u5c01\u88c5\u4e86\u5bf9kubernetes IflearnerJob\u5bf9\u8c61\u7684\u64cd\u4f5c\u3002\uff08IflearnerJob\u5bf9\u8c61\u7531iflearner-operator\u63d0\u4f9b\uff09","title":"Iflearner Flow\u8bbe\u8ba1\u6587\u6863"},{"location":"tutorial/system_arch_zh/#iflearner-flow","text":"","title":"Iflearner Flow\u8bbe\u8ba1\u6587\u6863"},{"location":"tutorial/system_arch_zh/#_1","text":"\u6a2a\u5411\u8054\u90a6\u5b66\u4e60\u53ef\u5206\u4e3a\u4e24\u79cd\u89d2\u8272\uff0c\u8054\u90a6\u670d\u52a1\u7aef\u548c\u8054\u90a6\u53c2\u4e0e\u65b9\uff0c\u67b6\u6784\u56fe\u5982\u4e0b\uff1a \u53c2\u4e0e\u65b9\u7528\u81ea\u5df1\u672c\u5730\u7684\u6570\u636e\u8bad\u7ec3\u6a21\u578b\uff0c\u7136\u540e\u5728\u6bcf\u8f6e\u8bad\u7ec3\u4e2d\u4e0a\u4f20\u6a21\u578b\u53c2\u6570\u6216\u8005\u68af\u5ea6\u5230\u670d\u52a1\u7aef\u3002\u670d\u52a1\u7aef\u63a5\u6536\u53c2\u4e0e\u65b9\u4e0a\u4f20\u4e0a\u6765\u7684\u6570\u636e\uff0c\u5e76\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\uff0c\u7136\u540e\u518d\u5c06\u805a\u5408\u540e\u7684\u6570\u636e\u4e0b\u53d1\u7ed9\u53c2\u4e0e\u65b9\u3002\u53c2\u4e0e\u65b9\u968f\u540e\u5f00\u542f\u65b0\u4e00\u8f6e\u7684\u8bad\u7ec3\u3002","title":"\u6982\u8ff0"},{"location":"tutorial/system_arch_zh/#_2","text":"Iflearner Flow\u5206\u4e3a\u670d\u52a1\u7aef\uff08iflearner-flow-server\uff09\u548c\u5ba2\u6237\u7aef\uff08iflearner-flow-federate\uff09\u4e24\u4e2a\u7ec4\u4ef6\uff0c\u7ec4\u4ef6\u5747\u53ef\u8fd0\u884c\u5728kubernetes\u4e4b\u4e0a\uff0c\u5e76\u4f9d\u8d56iflearner-operator\u7ec4\u4ef6\uff0c\u5177\u4f53\u7684\u529f\u80fd\u5982\u4e0b\uff1a","title":"\u7ec4\u4ef6"},{"location":"tutorial/system_arch_zh/#_3","text":"\u5728python\u76ee\u5f55\u4e0b\u6709\u56db\u4e2a\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\uff1a iflearner_flow_client sdk \u63d0\u4f9b\u4e86\u5bf9\u5e94http\u63a5\u53e3\u7684python\u5305\uff0c\u65b9\u4fbf\u5f00\u53d1\u96c6\u6210\u3002 cli \u57fa\u4e8esdk\uff0c\u63d0\u4f9b\u4e86\u547d\u4ee4\u884c\u5de5\u5177\u3002 iflearner_flow_federate \u5ba2\u6237\u7aef\u7684\u4ee3\u7801 iflearner_flow_server \u670d\u52a1\u7aef\u4ee3\u7801 iflearner_job \u5c01\u88c5\u4e86\u5bf9kubernetes IflearnerJob\u5bf9\u8c61\u7684\u64cd\u4f5c\u3002\uff08IflearnerJob\u5bf9\u8c61\u7531iflearner-operator\u63d0\u4f9b\uff09","title":"\u5b9e\u73b0"},{"location":"zh/","text":"Iflearner-flow \u00b6 DOCS | English Iflearner Flow\u662f\u4e00\u4e2a\u57fa\u4e8e\u5e95\u5c42\u8054\u90a6\u5b66\u4e60\u6846\u67b6 Iflearner \uff0c\u9488\u5bf9\u6a2a\u5411\u8054\u90a6\u5b66\u4e60\u5efa\u6a21\u573a\u666f\u4e0b\uff0c\u8054\u5408\u591a\u65b9\u5b8c\u6210\u8054\u90a6\u4efb\u52a1\u7684\u8c03\u5ea6\u5e73\u53f0\u3002 \u4e3b\u8981\u7279\u6027 \u00b6 \u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u7b97\u6cd5\u955c\u50cf(\u6df1\u5ea6\u5b66\u4e60\u4e3b\u6d41\u7b97\u6cd5\u5747\u53ef\u96c6\u6210) SMPC\u81ea\u52a8\u7ec4\u7f51(\u7528\u6237\u65e0\u9700\u5173\u5fc3\u7f51\u7edc\u7ec6\u8282) \u652f\u6301\u5927\u89c4\u6a21\u96c6\u7fa4\u4efb\u52a1\u8c03\u5ea6(\u57fa\u4e8ekubernetes) \u529f\u80fd \u00b6 \u8054\u5408\u4f5c\u4e1a\u548c\u4efb\u52a1\u8c03\u5ea6 \u4f5c\u4e1a\u5b9e\u65f6\u76d1\u63a7 REST API\u3001CLI\u3001SDK \u6570\u636e\u63a5\u5165(\u672c\u5730\u6570\u636e) WEB \u6587\u6863 \u00b6 Iflearner Flow\u76f8\u5173\u6587\u6863: Iflearner Flow License \u00b6 Apache License 2.0","title":"Home"},{"location":"zh/#iflearner-flow","text":"DOCS | English Iflearner Flow\u662f\u4e00\u4e2a\u57fa\u4e8e\u5e95\u5c42\u8054\u90a6\u5b66\u4e60\u6846\u67b6 Iflearner \uff0c\u9488\u5bf9\u6a2a\u5411\u8054\u90a6\u5b66\u4e60\u5efa\u6a21\u573a\u666f\u4e0b\uff0c\u8054\u5408\u591a\u65b9\u5b8c\u6210\u8054\u90a6\u4efb\u52a1\u7684\u8c03\u5ea6\u5e73\u53f0\u3002","title":"Iflearner-flow"},{"location":"zh/#_1","text":"\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u7b97\u6cd5\u955c\u50cf(\u6df1\u5ea6\u5b66\u4e60\u4e3b\u6d41\u7b97\u6cd5\u5747\u53ef\u96c6\u6210) SMPC\u81ea\u52a8\u7ec4\u7f51(\u7528\u6237\u65e0\u9700\u5173\u5fc3\u7f51\u7edc\u7ec6\u8282) \u652f\u6301\u5927\u89c4\u6a21\u96c6\u7fa4\u4efb\u52a1\u8c03\u5ea6(\u57fa\u4e8ekubernetes)","title":"\u4e3b\u8981\u7279\u6027"},{"location":"zh/#_2","text":"\u8054\u5408\u4f5c\u4e1a\u548c\u4efb\u52a1\u8c03\u5ea6 \u4f5c\u4e1a\u5b9e\u65f6\u76d1\u63a7 REST API\u3001CLI\u3001SDK \u6570\u636e\u63a5\u5165(\u672c\u5730\u6570\u636e) WEB","title":"\u529f\u80fd"},{"location":"zh/#_3","text":"Iflearner Flow\u76f8\u5173\u6587\u6863: Iflearner Flow","title":"\u6587\u6863"},{"location":"zh/#license","text":"Apache License 2.0","title":"License"},{"location":"zh/about/changelog/","text":"\u7248\u672c\u65e5\u5fd7 \u00b6 \u6b64\u9879\u76ee\u7684\u6240\u6709\u663e\u7740\u66f4\u6539\u90fd\u5c06\u8bb0\u5f55\u5728\u6b64\u6587\u4ef6\u4e2d\u3002 iflearner-flow-server \u00b6 [Unreleased] \u00b6 \u65b0\u589e \u00b6 \u4efb\u52a1\u6a21\u677f\u7ba1\u7406\u529f\u80fd(\u57fa\u672c\u7684\u589e\u5220\u6539\u67e5) \u4efb\u52a1\u7ba1\u7406\u529f\u80fd(\u57fa\u672c\u7684\u521b\u5efa\uff0c\u67e5\u8be2\uff0c\u5220\u9664\uff0c\u542f\u52a8\uff0c\u505c\u6b62\u64cd\u4f5c) \u652f\u6301API\u3001SDK\u3001CLI\u4e09\u79cd\u65b9\u5f0f\u64cd\u4f5c iflearner-flow-client \u00b6 [Unreleased] \u00b6 \u65b0\u589e \u00b6 \u4efb\u52a1\u7ba1\u7406\u529f\u80fd(\u57fa\u672c\u7684\u4efb\u52a1\u67e5\u8be2\u64cd\u4f5c) \u652f\u6301API\u3001SDK\u3001CLI\u4e09\u79cd\u65b9\u5f0f\u64cd\u4f5c","title":"ChangeLog"},{"location":"zh/about/changelog/#_1","text":"\u6b64\u9879\u76ee\u7684\u6240\u6709\u663e\u7740\u66f4\u6539\u90fd\u5c06\u8bb0\u5f55\u5728\u6b64\u6587\u4ef6\u4e2d\u3002","title":"\u7248\u672c\u65e5\u5fd7"},{"location":"zh/about/changelog/#iflearner-flow-server","text":"","title":"iflearner-flow-server"},{"location":"zh/about/changelog/#unreleased","text":"","title":"[Unreleased]"},{"location":"zh/about/changelog/#_2","text":"\u4efb\u52a1\u6a21\u677f\u7ba1\u7406\u529f\u80fd(\u57fa\u672c\u7684\u589e\u5220\u6539\u67e5) \u4efb\u52a1\u7ba1\u7406\u529f\u80fd(\u57fa\u672c\u7684\u521b\u5efa\uff0c\u67e5\u8be2\uff0c\u5220\u9664\uff0c\u542f\u52a8\uff0c\u505c\u6b62\u64cd\u4f5c) \u652f\u6301API\u3001SDK\u3001CLI\u4e09\u79cd\u65b9\u5f0f\u64cd\u4f5c","title":"\u65b0\u589e"},{"location":"zh/about/changelog/#iflearner-flow-client","text":"","title":"iflearner-flow-client"},{"location":"zh/about/changelog/#unreleased_1","text":"","title":"[Unreleased]"},{"location":"zh/about/changelog/#_3","text":"\u4efb\u52a1\u7ba1\u7406\u529f\u80fd(\u57fa\u672c\u7684\u4efb\u52a1\u67e5\u8be2\u64cd\u4f5c) \u652f\u6301API\u3001SDK\u3001CLI\u4e09\u79cd\u65b9\u5f0f\u64cd\u4f5c","title":"\u65b0\u589e"},{"location":"zh/about/contact/","text":"\u8054\u7cfb\u6211\u4eec \u00b6 \u5982\u679c\u60a8\u6709\u4efb\u4f55\u95ee\u9898\u60f3\u89e3\u51b3\u6216\u8005\u60f3\u53c2\u4e0e\u6211\u4eec\u4e00\u8d77\u5171\u540c\u6784\u5efa\u9879\u76ee, \u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u8054\u7cfb\u9014\u5f84\u8054\u7cfb\u5230\u6211\u4eec\uff0c \u6211\u4eec\u975e\u5e38\u6b22\u8fce\u60a8\u7684\u52a0\u5165\u3002 \u8054\u7cfb\u8def\u5f84 \u00b6 \u53ef\u4ee5\u52a0\u5165\u6211\u4eec\u7684\u5fae\u4fe1\u7fa4\u3002 \u5bf9\u4e8e\u5e38\u89c1\u95ee\u9898, \u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684 FAQ \u6587\u6863\u3002 \u8bf7\u4f7f\u7528 issues \u63d0\u4ea4BUG\u3002 \u8bf7\u4f7f\u7528 pull requests \u63d0\u4ea4\u3001\u8d21\u732e\u4ee3\u7801\u3002","title":"ContactUs"},{"location":"zh/about/contact/#_1","text":"\u5982\u679c\u60a8\u6709\u4efb\u4f55\u95ee\u9898\u60f3\u89e3\u51b3\u6216\u8005\u60f3\u53c2\u4e0e\u6211\u4eec\u4e00\u8d77\u5171\u540c\u6784\u5efa\u9879\u76ee, \u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u8054\u7cfb\u9014\u5f84\u8054\u7cfb\u5230\u6211\u4eec\uff0c \u6211\u4eec\u975e\u5e38\u6b22\u8fce\u60a8\u7684\u52a0\u5165\u3002","title":"\u8054\u7cfb\u6211\u4eec"},{"location":"zh/about/contact/#_2","text":"\u53ef\u4ee5\u52a0\u5165\u6211\u4eec\u7684\u5fae\u4fe1\u7fa4\u3002 \u5bf9\u4e8e\u5e38\u89c1\u95ee\u9898, \u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684 FAQ \u6587\u6863\u3002 \u8bf7\u4f7f\u7528 issues \u63d0\u4ea4BUG\u3002 \u8bf7\u4f7f\u7528 pull requests \u63d0\u4ea4\u3001\u8d21\u732e\u4ee3\u7801\u3002","title":"\u8054\u7cfb\u8def\u5f84"},{"location":"zh/api/errcode/iflearner_flow_federate_errcode/","text":"Iflearn Flow Federate Errcode API \u00b6 Success \u00b6 ret_module ret_code ret_msg SuccessResponse 0 success TaskError \u00b6 ret_module ret_code ret_msg TaskIflearnerFlowServerInternalError 20100 call iflearner_flow_server internal error TaskIflearnerFlowServerRetCodeError 20101 call iflearner_flow_server ret code error","title":"FlowFederateErrcode"},{"location":"zh/api/errcode/iflearner_flow_federate_errcode/#iflearn-flow-federate-errcode-api","text":"","title":"Iflearn Flow Federate Errcode API"},{"location":"zh/api/errcode/iflearner_flow_federate_errcode/#success","text":"ret_module ret_code ret_msg SuccessResponse 0 success","title":"Success"},{"location":"zh/api/errcode/iflearner_flow_federate_errcode/#taskerror","text":"ret_module ret_code ret_msg TaskIflearnerFlowServerInternalError 20100 call iflearner_flow_server internal error TaskIflearnerFlowServerRetCodeError 20101 call iflearner_flow_server ret code error","title":"TaskError"},{"location":"zh/api/errcode/iflearner_flow_server_errcode/","text":"Iflearn Flow Federate Errcode API \u00b6 CommonError \u00b6 ret_module ret_code ret_msg RequestParamResonse 10000 request param invalid FederateError \u00b6 ret_module ret_code ret_msg FederateRepeatRegister 10100 federate has been registered Success \u00b6 ret_module ret_code ret_msg SuccessResponse 0 success TaskError \u00b6 ret_module ret_code ret_msg TaskNameDuplicate 10301 duplicate task name TaskNameEmpty 10302 empty task name TaskNotFound 10300 task not found TaskPartyNotFound 10304 task party not found TaskStatusConflicit 10303 status conflicit TemplateError \u00b6 ret_module ret_code ret_msg TemplateNameEmpty 10202 empty template name TemplateNotFound 10200 template not found TemplateRepeat 10201 duplicate template name","title":"FlowServerErrcode"},{"location":"zh/api/errcode/iflearner_flow_server_errcode/#iflearn-flow-federate-errcode-api","text":"","title":"Iflearn Flow Federate Errcode API"},{"location":"zh/api/errcode/iflearner_flow_server_errcode/#commonerror","text":"ret_module ret_code ret_msg RequestParamResonse 10000 request param invalid","title":"CommonError"},{"location":"zh/api/errcode/iflearner_flow_server_errcode/#federateerror","text":"ret_module ret_code ret_msg FederateRepeatRegister 10100 federate has been registered","title":"FederateError"},{"location":"zh/api/errcode/iflearner_flow_server_errcode/#success","text":"ret_module ret_code ret_msg SuccessResponse 0 success","title":"Success"},{"location":"zh/api/errcode/iflearner_flow_server_errcode/#taskerror","text":"ret_module ret_code ret_msg TaskNameDuplicate 10301 duplicate task name TaskNameEmpty 10302 empty task name TaskNotFound 10300 task not found TaskPartyNotFound 10304 task party not found TaskStatusConflicit 10303 status conflicit","title":"TaskError"},{"location":"zh/api/errcode/iflearner_flow_server_errcode/#templateerror","text":"ret_module ret_code ret_msg TemplateNameEmpty 10202 empty template name TemplateNotFound 10200 template not found TemplateRepeat 10201 duplicate template name","title":"TemplateError"},{"location":"zh/api/swagger/iflearner_flow_federate_swagger/","text":"Swagger API \u00b6","title":"FlowFederateAPI"},{"location":"zh/api/swagger/iflearner_flow_federate_swagger/#swagger-api","text":"","title":"Swagger API"},{"location":"zh/api/swagger/iflearner_flow_server_swagger/","text":"Swagger API \u00b6","title":"FlowServerAPI"},{"location":"zh/api/swagger/iflearner_flow_server_swagger/#swagger-api","text":"","title":"Swagger API"},{"location":"zh/client/flow_federate_cli/","text":"Introduction \u00b6 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e0b\u8ff0\u547d\u4ee4\u5feb\u901f\u5b89\u88c5: pip install iflearner-flow-client \u63a5\u4e0b\u6765, \u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177 flow_federate_cli \u4e0e iflearner_flow_federate \u8fdb\u884c\u4ea4\u4e92\uff0c\u4ee5\u4e0b\u662f\u5b50\u547d\u4ee4\u3002 Usage: flow_federate_cli [ OPTIONS ] COMMAND [ ARGS ] ... Iflearner Flow Federate Cli. Options: -h, --help Show this message and exit. Commands: init Iflearner Federate Flow Cli Init Command task Task Operations Group \u5177\u4f53\u547d\u4ee4\u7528\u6cd5\u5982\u4e0b\u3002 Initialization \u00b6 \u5728\u4f7f\u7528\u547d\u4ee4\u884c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u914d\u7f6e\u8fde\u63a5\u670d\u52a1\u7684\u76f8\u5173\u53c2\u6570 Usage flow_federate_cli init [ OPTIONS ] OPTIONS \u53c2\u6570\u540d\u79f0 \u5fc5\u586b \u7c7b\u578b \u63cf\u8ff0 --host \u662f string \u8fde\u63a5 iflearner_flow_federate \u7684ip\u5730\u5740 --port \u662f string \u8fde\u63a5 iflearner_flow_federate \u7684\u7aef\u53e3 Request Example flow_federate_cli init --host 127 .0.0.1 --port 1235 Request Example { \"ret_code\" : 0 , \"ret_message\" : \"success\" } Task \u00b6","title":"FlowFederateCLI"},{"location":"zh/client/flow_federate_cli/#introduction","text":"\u9996\u5148\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e0b\u8ff0\u547d\u4ee4\u5feb\u901f\u5b89\u88c5: pip install iflearner-flow-client \u63a5\u4e0b\u6765, \u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177 flow_federate_cli \u4e0e iflearner_flow_federate \u8fdb\u884c\u4ea4\u4e92\uff0c\u4ee5\u4e0b\u662f\u5b50\u547d\u4ee4\u3002 Usage: flow_federate_cli [ OPTIONS ] COMMAND [ ARGS ] ... Iflearner Flow Federate Cli. Options: -h, --help Show this message and exit. Commands: init Iflearner Federate Flow Cli Init Command task Task Operations Group \u5177\u4f53\u547d\u4ee4\u7528\u6cd5\u5982\u4e0b\u3002","title":"Introduction"},{"location":"zh/client/flow_federate_cli/#initialization","text":"\u5728\u4f7f\u7528\u547d\u4ee4\u884c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u914d\u7f6e\u8fde\u63a5\u670d\u52a1\u7684\u76f8\u5173\u53c2\u6570 Usage flow_federate_cli init [ OPTIONS ] OPTIONS \u53c2\u6570\u540d\u79f0 \u5fc5\u586b \u7c7b\u578b \u63cf\u8ff0 --host \u662f string \u8fde\u63a5 iflearner_flow_federate \u7684ip\u5730\u5740 --port \u662f string \u8fde\u63a5 iflearner_flow_federate \u7684\u7aef\u53e3 Request Example flow_federate_cli init --host 127 .0.0.1 --port 1235 Request Example { \"ret_code\" : 0 , \"ret_message\" : \"success\" }","title":"Initialization"},{"location":"zh/client/flow_federate_cli/#task","text":"","title":"Task"},{"location":"zh/client/flow_federate_sdk/","text":"Introduction \u00b6 \u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 flow_federate_sdk sdk\u5e93\u4e0e iflearner_flow_federate \u670d\u52a1\u8fdb\u884c\u4ea4\u4e92\u3002 Installation \u00b6 \u60a8\u53ef\u4ee5\u6267\u884c\u4e0b\u8ff0\u547d\u4ee4\u8fdb\u884c\u5feb\u901f\u5b89\u88c5: pip install iflearner-flow-client \u7136\u540e, \u60a8\u5c31\u53ef\u4ee5\u5f15\u7528 flow_federate_sdk \u5e93\u8fdb\u884c\u63a5\u53e3\u8c03\u7528 Initialization \u00b6 \u6211\u4eec\u9700\u8981\u5148\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u5b8c\u6210\u914d\u7f6e\u8fde\u63a5\u670d\u52a1\u7684\u76f8\u5173\u53c2\u6570, \u751f\u6210\u4e00\u4e2aclient\u5bf9\u8c61\u3002 Parameters parameter required type description host yes string The host for connecting iflearner_flow_federate server port yes string The port for connecting iflearner_flow_federate server Usage from flow_federate_sdk import FlowFederateSdk # use real ip address to initialize SDK flow_federate_client = FlowFederateSdk ( host = \"127.0.0.1\" , port = \"1235\" ) Task \u00b6 List \u00b6 \u83b7\u53d6\u4efb\u52a1\u5217\u8868 Function list ( cls, keyword: str, page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f","title":"FlowFederateSDK"},{"location":"zh/client/flow_federate_sdk/#introduction","text":"\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 flow_federate_sdk sdk\u5e93\u4e0e iflearner_flow_federate \u670d\u52a1\u8fdb\u884c\u4ea4\u4e92\u3002","title":"Introduction"},{"location":"zh/client/flow_federate_sdk/#installation","text":"\u60a8\u53ef\u4ee5\u6267\u884c\u4e0b\u8ff0\u547d\u4ee4\u8fdb\u884c\u5feb\u901f\u5b89\u88c5: pip install iflearner-flow-client \u7136\u540e, \u60a8\u5c31\u53ef\u4ee5\u5f15\u7528 flow_federate_sdk \u5e93\u8fdb\u884c\u63a5\u53e3\u8c03\u7528","title":"Installation"},{"location":"zh/client/flow_federate_sdk/#initialization","text":"\u6211\u4eec\u9700\u8981\u5148\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u5b8c\u6210\u914d\u7f6e\u8fde\u63a5\u670d\u52a1\u7684\u76f8\u5173\u53c2\u6570, \u751f\u6210\u4e00\u4e2aclient\u5bf9\u8c61\u3002 Parameters parameter required type description host yes string The host for connecting iflearner_flow_federate server port yes string The port for connecting iflearner_flow_federate server Usage from flow_federate_sdk import FlowFederateSdk # use real ip address to initialize SDK flow_federate_client = FlowFederateSdk ( host = \"127.0.0.1\" , port = \"1235\" )","title":"Initialization"},{"location":"zh/client/flow_federate_sdk/#task","text":"","title":"Task"},{"location":"zh/client/flow_federate_sdk/#list","text":"\u83b7\u53d6\u4efb\u52a1\u5217\u8868 Function list ( cls, keyword: str, page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f","title":"List"},{"location":"zh/client/flow_server_cli/","text":"Introduction \u00b6 \u9996\u5148\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e0b\u8ff0\u547d\u4ee4\u5feb\u901f\u5b89\u88c5: pip install iflearner-flow-client \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177 flow_server_cli \u4e0e iflearner_flow_server \u8fdb\u884c\u4ea4\u4e92\uff0c\u4ee5\u4e0b\u662f\u5b50\u547d\u4ee4\u3002 Usage: flow_server_cli [ OPTIONS ] COMMAND [ ARGS ] ... Iflearner Flow Server Cli. Options: -h, --help Show this message and exit. Commands: init Iflearner Server Flow Cli Init Command task Task Operations Group template Template Operations Group \u5177\u4f53\u547d\u4ee4\u7528\u6cd5\u5982\u4e0b\u3002 Initialization \u00b6 \u5728\u4f7f\u7528\u547d\u4ee4\u884c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u914d\u7f6e\u8fde\u63a5\u670d\u52a1\u7684\u76f8\u5173\u53c2\u6570 Usage flow_server_cli init [ OPTIONS ] OPTIONS \u53c2\u6570\u540d\u79f0 \u5fc5\u586b \u7c7b\u578b \u63cf\u8ff0 --host \u662f string \u8fde\u63a5 iflearner_flow_server \u7684ip\u5730\u5740 --port \u662f string \u8fde\u63a5 iflearner_flow_server \u7684\u7aef\u53e3 Request Example flow_server_cli init --host 127 .0.0.1 --port 1235 Request Example { \"ret_code\" : 0 , \"ret_message\" : \"success\" } Template \u00b6 create \u00b6 \u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template create [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -n, --template_name \u662f string \u6a21\u677f\u540d\u79f0 -r, --remark \u5426 string \u6a21\u677f\u8bf4\u660e -i, --image_url \u662f string \u6a21\u677f\u914d\u7f6e\u7684\u955c\u50cfurl\u5730\u5740 -w, --workdir \u5426 string \u955c\u50cfworkdir -c, --command \u5426 string \u955c\u50cf\u542f\u52a8\u547d\u4ee4 -hp, --hyper_parameter \u5426 string \u955c\u50cf\u542f\u52a8\u4f20\u9012\u7684\u8d85\u53c2 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.template_id string \u751f\u6210\u7684\u6a21\u677fid Request Example flow_server_cli template create -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } } update \u00b6 \u66f4\u65b0\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template update [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 -n, --template_name \u662f string \u6a21\u677f\u540d\u79f0 -r, --remark \u5426 string \u6a21\u677f\u8bf4\u660e -i, --image_url \u662f string \u6a21\u677f\u914d\u7f6e\u7684\u955c\u50cfurl\u5730\u5740 -w, --workdir \u5426 string \u955c\u50cfworkdir -c, --command \u5426 string \u955c\u50cf\u542f\u52a8\u547d\u4ee4 -hp, --hyper_parameter \u5426 array \u955c\u50cf\u542f\u52a8\u4f20\u9012\u7684\u8d85\u53c2 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.template_id string \u751f\u6210\u7684\u6a21\u677fid Request Example flow_server_cli template update -id 20f42769b99b492691da1ba2f236b1 -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 \u67e5\u8be2\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f\u4fe1\u606f Usage flow_server_cli template get [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.name string \u6a21\u677f\u540d\u79f0 data.remark string \u6a21\u677f\u5907\u6ce8 data.image_url string \u6a21\u677f\u955c\u50cf\u7684url\u5730\u5740 data.workdir string \u6a21\u677f\u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.command array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 data.hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2 data.template_id string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 data.create_time string \u6a21\u677f\u7684\u521b\u5efa\u65f6\u95f4 data.modify_time string \u6a21\u677f\u7684\u66f4\u65b0\u65f6\u95f4 Request Example flow_server_cli template get -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } } list \u00b6 \u6279\u91cf\u67e5\u8be2\u6a21\u677f\u4fe1\u606f Usage flow_server_cli template list [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -p, --page \u5426 int \u5f53\u524d\u9875\uff0c\u9ed8\u8ba4\u4e3a1 -l, --limit \u5426 int \u5f53\u524d\u9875\u67e5\u8be2\u7684\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a10 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.templates[index].name string \u6a21\u677f\u540d\u79f0 data.templates[index].remark string \u6a21\u677f\u5907\u6ce8 data.templates[index].image_url string \u6a21\u677f\u955c\u50cf\u7684url\u5730\u5740 data.templates[index].workdir string \u6a21\u677f\u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.templates[index].command array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 data.templates[index].hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2 data.templates[index].template_id string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 data.templates[index].create_time string \u6a21\u677f\u7684\u521b\u5efa\u65f6\u95f4 data.templates[index].modify_time string \u6a21\u677f\u7684\u66f4\u65b0\u65f6\u95f4 Request Example flow_server_cli template list -p 1 -l 2 Rexponse Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } } delete \u00b6 \u5220\u9664\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template delete [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli template delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Task \u00b6 create \u00b6 \u521b\u5efa\u4efb\u52a1 Usage flow_server_cli task create [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -n, --task_name \u662f string \u4efb\u52a1\u540d\u79f0 -t, --template_id \u662f string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677f -r, --remark \u5426 string \u4efb\u52a1\u5907\u6ce8 -fd, --federate_data \u662f array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.task_id string task id Request Example flow_server_cli task create -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } update \u00b6 \u66f4\u65b0\u4efb\u52a1 Usage flow_server_cli task update [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id -n, --task_name \u662f string \u4efb\u52a1\u540d\u79f0 -t, --template_id \u662f string \u4efb\u52a1\u5173\u8054\u6a21\u677f -r, --remark \u5426 string \u4efb\u52a1\u5907\u6ce8 -fd, --federate_data \u662f array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task update -id bbc0c30e96bc4da29b2b326fb1f8786e -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a new remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 \u83b7\u53d6\u4efb\u52a1\u8be6\u60c5 Usage flow_server_cli task get [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data dict \u4efb\u52a1\u8be6\u60c5 Request Example flow_server_cli task get -id bbc0c30e96bc4da29b2b326fb1f8786e Response Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } list \u00b6 \u83b7\u53d6\u4efb\u52a1\u5217\u8868 Usage flow_server_cli task list [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -p, --page \u5426 int \u5f53\u524d\u9875\uff0c\u9ed8\u8ba4\u4e3a1 -l, --limit \u5426 int \u5f53\u524d\u9875\u67e5\u8be2\u7684\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a10 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.task_count int \u4efb\u52a1\u603b\u6570 data.tasks array \u5f53\u524d\u9875\u7684\u4efb\u52a1\u5217\u8868 Request Example flow_server_cli task list -p 1 -l 10 Response Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } delete \u00b6 \u5220\u9664\u4efb\u52a1 Usage flow_server_cli task delete [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } start \u00b6 \u5f00\u59cb\u4efb\u52a1 Usage flow_server_cli task start [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task start -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } stop \u00b6 \u505c\u6b62\u4efb\u52a1 Usage flow_server_cli task stop [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task stop -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"FlowServerCLI"},{"location":"zh/client/flow_server_cli/#introduction","text":"\u9996\u5148\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e0b\u8ff0\u547d\u4ee4\u5feb\u901f\u5b89\u88c5: pip install iflearner-flow-client \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177 flow_server_cli \u4e0e iflearner_flow_server \u8fdb\u884c\u4ea4\u4e92\uff0c\u4ee5\u4e0b\u662f\u5b50\u547d\u4ee4\u3002 Usage: flow_server_cli [ OPTIONS ] COMMAND [ ARGS ] ... Iflearner Flow Server Cli. Options: -h, --help Show this message and exit. Commands: init Iflearner Server Flow Cli Init Command task Task Operations Group template Template Operations Group \u5177\u4f53\u547d\u4ee4\u7528\u6cd5\u5982\u4e0b\u3002","title":"Introduction"},{"location":"zh/client/flow_server_cli/#initialization","text":"\u5728\u4f7f\u7528\u547d\u4ee4\u884c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u914d\u7f6e\u8fde\u63a5\u670d\u52a1\u7684\u76f8\u5173\u53c2\u6570 Usage flow_server_cli init [ OPTIONS ] OPTIONS \u53c2\u6570\u540d\u79f0 \u5fc5\u586b \u7c7b\u578b \u63cf\u8ff0 --host \u662f string \u8fde\u63a5 iflearner_flow_server \u7684ip\u5730\u5740 --port \u662f string \u8fde\u63a5 iflearner_flow_server \u7684\u7aef\u53e3 Request Example flow_server_cli init --host 127 .0.0.1 --port 1235 Request Example { \"ret_code\" : 0 , \"ret_message\" : \"success\" }","title":"Initialization"},{"location":"zh/client/flow_server_cli/#template","text":"","title":"Template"},{"location":"zh/client/flow_server_cli/#create","text":"\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template create [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -n, --template_name \u662f string \u6a21\u677f\u540d\u79f0 -r, --remark \u5426 string \u6a21\u677f\u8bf4\u660e -i, --image_url \u662f string \u6a21\u677f\u914d\u7f6e\u7684\u955c\u50cfurl\u5730\u5740 -w, --workdir \u5426 string \u955c\u50cfworkdir -c, --command \u5426 string \u955c\u50cf\u542f\u52a8\u547d\u4ee4 -hp, --hyper_parameter \u5426 string \u955c\u50cf\u542f\u52a8\u4f20\u9012\u7684\u8d85\u53c2 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.template_id string \u751f\u6210\u7684\u6a21\u677fid Request Example flow_server_cli template create -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } }","title":"create"},{"location":"zh/client/flow_server_cli/#update","text":"\u66f4\u65b0\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template update [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 -n, --template_name \u662f string \u6a21\u677f\u540d\u79f0 -r, --remark \u5426 string \u6a21\u677f\u8bf4\u660e -i, --image_url \u662f string \u6a21\u677f\u914d\u7f6e\u7684\u955c\u50cfurl\u5730\u5740 -w, --workdir \u5426 string \u955c\u50cfworkdir -c, --command \u5426 string \u955c\u50cf\u542f\u52a8\u547d\u4ee4 -hp, --hyper_parameter \u5426 array \u955c\u50cf\u542f\u52a8\u4f20\u9012\u7684\u8d85\u53c2 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.template_id string \u751f\u6210\u7684\u6a21\u677fid Request Example flow_server_cli template update -id 20f42769b99b492691da1ba2f236b1 -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"zh/client/flow_server_cli/#get","text":"\u67e5\u8be2\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f\u4fe1\u606f Usage flow_server_cli template get [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.name string \u6a21\u677f\u540d\u79f0 data.remark string \u6a21\u677f\u5907\u6ce8 data.image_url string \u6a21\u677f\u955c\u50cf\u7684url\u5730\u5740 data.workdir string \u6a21\u677f\u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.command array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 data.hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2 data.template_id string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 data.create_time string \u6a21\u677f\u7684\u521b\u5efa\u65f6\u95f4 data.modify_time string \u6a21\u677f\u7684\u66f4\u65b0\u65f6\u95f4 Request Example flow_server_cli template get -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } }","title":"get"},{"location":"zh/client/flow_server_cli/#list","text":"\u6279\u91cf\u67e5\u8be2\u6a21\u677f\u4fe1\u606f Usage flow_server_cli template list [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -p, --page \u5426 int \u5f53\u524d\u9875\uff0c\u9ed8\u8ba4\u4e3a1 -l, --limit \u5426 int \u5f53\u524d\u9875\u67e5\u8be2\u7684\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a10 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.templates[index].name string \u6a21\u677f\u540d\u79f0 data.templates[index].remark string \u6a21\u677f\u5907\u6ce8 data.templates[index].image_url string \u6a21\u677f\u955c\u50cf\u7684url\u5730\u5740 data.templates[index].workdir string \u6a21\u677f\u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.templates[index].command array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 data.templates[index].hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2 data.templates[index].template_id string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 data.templates[index].create_time string \u6a21\u677f\u7684\u521b\u5efa\u65f6\u95f4 data.templates[index].modify_time string \u6a21\u677f\u7684\u66f4\u65b0\u65f6\u95f4 Request Example flow_server_cli template list -p 1 -l 2 Rexponse Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } }","title":"list"},{"location":"zh/client/flow_server_cli/#delete","text":"\u5220\u9664\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template delete [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli template delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"zh/client/flow_server_cli/#task","text":"","title":"Task"},{"location":"zh/client/flow_server_cli/#create_1","text":"\u521b\u5efa\u4efb\u52a1 Usage flow_server_cli task create [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -n, --task_name \u662f string \u4efb\u52a1\u540d\u79f0 -t, --template_id \u662f string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677f -r, --remark \u5426 string \u4efb\u52a1\u5907\u6ce8 -fd, --federate_data \u662f array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.task_id string task id Request Example flow_server_cli task create -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"create"},{"location":"zh/client/flow_server_cli/#update_1","text":"\u66f4\u65b0\u4efb\u52a1 Usage flow_server_cli task update [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id -n, --task_name \u662f string \u4efb\u52a1\u540d\u79f0 -t, --template_id \u662f string \u4efb\u52a1\u5173\u8054\u6a21\u677f -r, --remark \u5426 string \u4efb\u52a1\u5907\u6ce8 -fd, --federate_data \u662f array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task update -id bbc0c30e96bc4da29b2b326fb1f8786e -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a new remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"zh/client/flow_server_cli/#get_1","text":"\u83b7\u53d6\u4efb\u52a1\u8be6\u60c5 Usage flow_server_cli task get [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data dict \u4efb\u52a1\u8be6\u60c5 Request Example flow_server_cli task get -id bbc0c30e96bc4da29b2b326fb1f8786e Response Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"get"},{"location":"zh/client/flow_server_cli/#list_1","text":"\u83b7\u53d6\u4efb\u52a1\u5217\u8868 Usage flow_server_cli task list [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -p, --page \u5426 int \u5f53\u524d\u9875\uff0c\u9ed8\u8ba4\u4e3a1 -l, --limit \u5426 int \u5f53\u524d\u9875\u67e5\u8be2\u7684\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a10 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.task_count int \u4efb\u52a1\u603b\u6570 data.tasks array \u5f53\u524d\u9875\u7684\u4efb\u52a1\u5217\u8868 Request Example flow_server_cli task list -p 1 -l 10 Response Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"list"},{"location":"zh/client/flow_server_cli/#delete_1","text":"\u5220\u9664\u4efb\u52a1 Usage flow_server_cli task delete [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"zh/client/flow_server_cli/#start","text":"\u5f00\u59cb\u4efb\u52a1 Usage flow_server_cli task start [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task start -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"start"},{"location":"zh/client/flow_server_cli/#stop","text":"\u505c\u6b62\u4efb\u52a1 Usage flow_server_cli task stop [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task stop -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"stop"},{"location":"zh/client/flow_server_sdk/","text":"Introduction \u00b6 \u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 flow_server_sdk sdk\u5e93\u4e0e iflearner_flow_server \u670d\u52a1\u8fdb\u884c\u4ea4\u4e92\u3002 Installation \u00b6 \u60a8\u53ef\u4ee5\u6267\u884c\u4e0b\u8ff0\u547d\u4ee4\u8fdb\u884c\u5feb\u901f\u5b89\u88c5: pip install iflearner-flow-client \u7136\u540e, \u60a8\u5c31\u53ef\u4ee5\u5f15\u7528 flow_server_sdk \u5e93\u8fdb\u884c\u63a5\u53e3\u8c03\u7528 Initialization \u00b6 \u6211\u4eec\u9700\u8981\u5148\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u5b8c\u6210\u914d\u7f6e\u8fde\u63a5\u670d\u52a1\u7684\u76f8\u5173\u53c2\u6570, \u751f\u6210\u4e00\u4e2aclient\u5bf9\u8c61\u3002 Parameters parameter required type description host yes string The host for connecting iflearner_flow_server server port yes string The port for connecting iflearner_flow_server server Usage from flow_server_sdk import FlowServerSdk # use real ip address to initialize SDK flow_server_client = FlowServerSdk ( host = \"127.0.0.1\" , port = \"1235\" ) Template \u00b6 create \u00b6 \u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Function create ( cls, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u6a21\u677f\u540d\u79f0 image_url yes string \u955c\u50cfurl\u5730\u5740 workdir yes string \u955c\u50cf\u5de5\u4f5c\u76ee\u5f55 command yes array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 remark no string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f hyper_parameter no array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2\u6570 Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.template_id string \u521b\u5efa\u7684\u6a21\u677fid Call Example flow_server_client.template.create ( name = \"template_01\" , image_url = \"iflearner_ocr:0.0.1\" , workdir = \"/data/ocr/script\" , command =[] , remark = \"\" , hyper_parameter = [] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } } update \u00b6 \u66f4\u65b0\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f\u3002 Function update ( cls, template_id: str, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid name yes string \u6a21\u677f\u540d image_url yes string \u955c\u50cfurl\u5730\u5740 workdir yes string \u955c\u50cf\u5de5\u4f5c\u76ee\u5f55 command yes array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 remark no string \u6a21\u677f\u63cf\u8ff0 hyper_parameter no array \u955c\u50cf\u542f\u52a8\u8d85\u53c2\u6570 Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.template.update ( template_id = \"20f42769b99b492691da1ba2f236b1\" , name = \"template_01\" , image_url = \"iflearner_ocr:0.0.2\" , workdir = \"/data/ocr/script\" , command =[] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 \u67e5\u8be2\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f Function get ( cls, template_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.name string \u6a21\u677f\u540d\u79f0 data.remark string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f data.image_url string \u955c\u50cf\u7684url\u5730\u5740 data.workdir string \u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.command array \u955c\u50cf\u7684\u542f\u52a8\u547d\u4ee4 data.hyper_parameter array \u955c\u50cf\u7684\u542f\u52a8\u8d85\u53c2\u6570 data.template_id string \u6a21\u677fid data.create_time string \u6a21\u677f\u521b\u5efa\u65f6\u95f4 data.modify_time string \u6a21\u677f\u66f4\u65b0\u65f6\u95f4 Call Example flow_server_client.template.get ( template_id = \"20f42769b99b492691da1ba2f236b1\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } } list \u00b6 \u6279\u91cf\u67e5\u8be2\u6a21\u677f\u4fe1\u606f Function list ( cls, keyword: str = \"\" , page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e page no int \u5f53\u524d\u9875 limit no int \u5f53\u524d\u9875\u67e5\u8be2\u6570\u76ee Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.templates[index].name string \u6a21\u677f\u540d data.templates[index].remark string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f data.templates[index].image_url string \u955c\u50cf\u7684url\u5730\u5740 data.templates[index].workdir string \u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.templates[index].command array \u955c\u50cf\u7684\u542f\u52a8\u547d\u4ee4 data.templates[index].hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2\u6570 data.templates[index].template_id string \u6a21\u677fid data.templates[index].create_time string \u6a21\u677f\u521b\u5efa\u65f6\u95f4 data.templates[index].modify_time string \u6a21\u677f\u66f4\u65b0\u65f6\u95f4 Call Example flow_server_client.template.list ( keyword = \"\" , page = 1 , limit = 10 ) Return Example \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } } delete \u00b6 \u5220\u9664\u4e00\u4e2a\u6307\u5b9a\u7684\u6a21\u677f Function delete ( cls, template_id: str ) -> Dict [ str, Any ] : Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example ~ ~ flow_server_client.template.delete ( template_id = self._generate_template_id ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Task \u00b6 Create \u00b6 \u521b\u5efa\u4efb\u52a1 Function create ( cls, name: str, template_id: str, remark: str, federate_data: List [ Any ] , ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.task_id string \u521b\u5efa\u7684\u4efb\u52a1id Call Example flow_server_client.task.create ( name = \"testCase1\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"\" }] , ) Return Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Update \u00b6 \u66f4\u65b0\u4efb\u52a1 Function update ( cls, task_id: str, name: str, template_id: str, remark: str, federate_data: List, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.update ( task_id = \"0578abed1032425499abd20f2ef67938\" , name = \"testCase\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"aa\" }] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Get \u00b6 \u83b7\u53d6\u4efb\u52a1\u8be6\u60c5 Function get ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data dict \u4efb\u52a1\u8be6\u60c5 Call Example flow_server_client.task.get ( \"0578abed1032425499abd20f2ef67938\" ) Return Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } List \u00b6 \u83b7\u53d6\u4efb\u52a1\u5217\u8868 Function list ( cls, page: int, limit: int ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e page yes int \u9875\u7801 limit yes int \u6bcf\u9875\u7684\u6570\u91cf Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.task_count int \u4efb\u52a1\u603b\u6570 data.tasks array \u4efb\u52a1\u5217\u8868 Call Example flow_server_client.task.list ( 1 , 10 ) Return Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Delete \u00b6 \u5220\u9664\u4efb\u52a1 Function delete ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.delete ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Start \u00b6 \u5f00\u59cb\u4efb\u52a1 Function start ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.start ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Stop \u00b6 \u505c\u6b62\u4efb\u52a1 Function stop ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.stop ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"FlowServerSDK"},{"location":"zh/client/flow_server_sdk/#introduction","text":"\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 flow_server_sdk sdk\u5e93\u4e0e iflearner_flow_server \u670d\u52a1\u8fdb\u884c\u4ea4\u4e92\u3002","title":"Introduction"},{"location":"zh/client/flow_server_sdk/#installation","text":"\u60a8\u53ef\u4ee5\u6267\u884c\u4e0b\u8ff0\u547d\u4ee4\u8fdb\u884c\u5feb\u901f\u5b89\u88c5: pip install iflearner-flow-client \u7136\u540e, \u60a8\u5c31\u53ef\u4ee5\u5f15\u7528 flow_server_sdk \u5e93\u8fdb\u884c\u63a5\u53e3\u8c03\u7528","title":"Installation"},{"location":"zh/client/flow_server_sdk/#initialization","text":"\u6211\u4eec\u9700\u8981\u5148\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u5b8c\u6210\u914d\u7f6e\u8fde\u63a5\u670d\u52a1\u7684\u76f8\u5173\u53c2\u6570, \u751f\u6210\u4e00\u4e2aclient\u5bf9\u8c61\u3002 Parameters parameter required type description host yes string The host for connecting iflearner_flow_server server port yes string The port for connecting iflearner_flow_server server Usage from flow_server_sdk import FlowServerSdk # use real ip address to initialize SDK flow_server_client = FlowServerSdk ( host = \"127.0.0.1\" , port = \"1235\" )","title":"Initialization"},{"location":"zh/client/flow_server_sdk/#template","text":"","title":"Template"},{"location":"zh/client/flow_server_sdk/#create","text":"\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Function create ( cls, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u6a21\u677f\u540d\u79f0 image_url yes string \u955c\u50cfurl\u5730\u5740 workdir yes string \u955c\u50cf\u5de5\u4f5c\u76ee\u5f55 command yes array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 remark no string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f hyper_parameter no array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2\u6570 Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.template_id string \u521b\u5efa\u7684\u6a21\u677fid Call Example flow_server_client.template.create ( name = \"template_01\" , image_url = \"iflearner_ocr:0.0.1\" , workdir = \"/data/ocr/script\" , command =[] , remark = \"\" , hyper_parameter = [] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } }","title":"create"},{"location":"zh/client/flow_server_sdk/#update","text":"\u66f4\u65b0\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f\u3002 Function update ( cls, template_id: str, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid name yes string \u6a21\u677f\u540d image_url yes string \u955c\u50cfurl\u5730\u5740 workdir yes string \u955c\u50cf\u5de5\u4f5c\u76ee\u5f55 command yes array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 remark no string \u6a21\u677f\u63cf\u8ff0 hyper_parameter no array \u955c\u50cf\u542f\u52a8\u8d85\u53c2\u6570 Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.template.update ( template_id = \"20f42769b99b492691da1ba2f236b1\" , name = \"template_01\" , image_url = \"iflearner_ocr:0.0.2\" , workdir = \"/data/ocr/script\" , command =[] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"zh/client/flow_server_sdk/#get","text":"\u67e5\u8be2\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f Function get ( cls, template_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.name string \u6a21\u677f\u540d\u79f0 data.remark string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f data.image_url string \u955c\u50cf\u7684url\u5730\u5740 data.workdir string \u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.command array \u955c\u50cf\u7684\u542f\u52a8\u547d\u4ee4 data.hyper_parameter array \u955c\u50cf\u7684\u542f\u52a8\u8d85\u53c2\u6570 data.template_id string \u6a21\u677fid data.create_time string \u6a21\u677f\u521b\u5efa\u65f6\u95f4 data.modify_time string \u6a21\u677f\u66f4\u65b0\u65f6\u95f4 Call Example flow_server_client.template.get ( template_id = \"20f42769b99b492691da1ba2f236b1\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } }","title":"get"},{"location":"zh/client/flow_server_sdk/#list","text":"\u6279\u91cf\u67e5\u8be2\u6a21\u677f\u4fe1\u606f Function list ( cls, keyword: str = \"\" , page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e page no int \u5f53\u524d\u9875 limit no int \u5f53\u524d\u9875\u67e5\u8be2\u6570\u76ee Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.templates[index].name string \u6a21\u677f\u540d data.templates[index].remark string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f data.templates[index].image_url string \u955c\u50cf\u7684url\u5730\u5740 data.templates[index].workdir string \u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.templates[index].command array \u955c\u50cf\u7684\u542f\u52a8\u547d\u4ee4 data.templates[index].hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2\u6570 data.templates[index].template_id string \u6a21\u677fid data.templates[index].create_time string \u6a21\u677f\u521b\u5efa\u65f6\u95f4 data.templates[index].modify_time string \u6a21\u677f\u66f4\u65b0\u65f6\u95f4 Call Example flow_server_client.template.list ( keyword = \"\" , page = 1 , limit = 10 ) Return Example \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } }","title":"list"},{"location":"zh/client/flow_server_sdk/#delete","text":"\u5220\u9664\u4e00\u4e2a\u6307\u5b9a\u7684\u6a21\u677f Function delete ( cls, template_id: str ) -> Dict [ str, Any ] : Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example ~ ~ flow_server_client.template.delete ( template_id = self._generate_template_id ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"zh/client/flow_server_sdk/#task","text":"","title":"Task"},{"location":"zh/client/flow_server_sdk/#create_1","text":"\u521b\u5efa\u4efb\u52a1 Function create ( cls, name: str, template_id: str, remark: str, federate_data: List [ Any ] , ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.task_id string \u521b\u5efa\u7684\u4efb\u52a1id Call Example flow_server_client.task.create ( name = \"testCase1\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"\" }] , ) Return Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Create"},{"location":"zh/client/flow_server_sdk/#update_1","text":"\u66f4\u65b0\u4efb\u52a1 Function update ( cls, task_id: str, name: str, template_id: str, remark: str, federate_data: List, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.update ( task_id = \"0578abed1032425499abd20f2ef67938\" , name = \"testCase\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"aa\" }] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Update"},{"location":"zh/client/flow_server_sdk/#get_1","text":"\u83b7\u53d6\u4efb\u52a1\u8be6\u60c5 Function get ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data dict \u4efb\u52a1\u8be6\u60c5 Call Example flow_server_client.task.get ( \"0578abed1032425499abd20f2ef67938\" ) Return Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Get"},{"location":"zh/client/flow_server_sdk/#list_1","text":"\u83b7\u53d6\u4efb\u52a1\u5217\u8868 Function list ( cls, page: int, limit: int ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e page yes int \u9875\u7801 limit yes int \u6bcf\u9875\u7684\u6570\u91cf Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.task_count int \u4efb\u52a1\u603b\u6570 data.tasks array \u4efb\u52a1\u5217\u8868 Call Example flow_server_client.task.list ( 1 , 10 ) Return Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"List"},{"location":"zh/client/flow_server_sdk/#delete_1","text":"\u5220\u9664\u4efb\u52a1 Function delete ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.delete ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Delete"},{"location":"zh/client/flow_server_sdk/#start","text":"\u5f00\u59cb\u4efb\u52a1 Function start ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.start ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Start"},{"location":"zh/client/flow_server_sdk/#stop","text":"\u505c\u6b62\u4efb\u52a1 Function stop ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.stop ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Stop"},{"location":"zh/client/cli/flow_federate/task/","text":"Task \u00b6","title":"Task"},{"location":"zh/client/cli/flow_federate/task/#task","text":"","title":"Task"},{"location":"zh/client/cli/flow_server/task/","text":"Task \u00b6 create \u00b6 \u521b\u5efa\u4efb\u52a1 Usage flow_server_cli task create [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -n, --task_name \u662f string \u4efb\u52a1\u540d\u79f0 -t, --template_id \u662f string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677f -r, --remark \u5426 string \u4efb\u52a1\u5907\u6ce8 -fd, --federate_data \u662f array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.task_id string task id Request Example flow_server_cli task create -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } update \u00b6 \u66f4\u65b0\u4efb\u52a1 Usage flow_server_cli task update [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id -n, --task_name \u662f string \u4efb\u52a1\u540d\u79f0 -t, --template_id \u662f string \u4efb\u52a1\u5173\u8054\u6a21\u677f -r, --remark \u5426 string \u4efb\u52a1\u5907\u6ce8 -fd, --federate_data \u662f array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task update -id bbc0c30e96bc4da29b2b326fb1f8786e -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a new remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 \u83b7\u53d6\u4efb\u52a1\u8be6\u60c5 Usage flow_server_cli task get [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data dict \u4efb\u52a1\u8be6\u60c5 Request Example flow_server_cli task get -id bbc0c30e96bc4da29b2b326fb1f8786e Response Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } list \u00b6 \u83b7\u53d6\u4efb\u52a1\u5217\u8868 Usage flow_server_cli task list [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -p, --page \u5426 int \u5f53\u524d\u9875\uff0c\u9ed8\u8ba4\u4e3a1 -l, --limit \u5426 int \u5f53\u524d\u9875\u67e5\u8be2\u7684\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a10 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.task_count int \u4efb\u52a1\u603b\u6570 data.tasks array \u5f53\u524d\u9875\u7684\u4efb\u52a1\u5217\u8868 Request Example flow_server_cli task list -p 1 -l 10 Response Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } delete \u00b6 \u5220\u9664\u4efb\u52a1 Usage flow_server_cli task delete [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } start \u00b6 \u5f00\u59cb\u4efb\u52a1 Usage flow_server_cli task start [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task start -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } stop \u00b6 \u505c\u6b62\u4efb\u52a1 Usage flow_server_cli task stop [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task stop -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Task"},{"location":"zh/client/cli/flow_server/task/#task","text":"","title":"Task"},{"location":"zh/client/cli/flow_server/task/#create","text":"\u521b\u5efa\u4efb\u52a1 Usage flow_server_cli task create [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -n, --task_name \u662f string \u4efb\u52a1\u540d\u79f0 -t, --template_id \u662f string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677f -r, --remark \u5426 string \u4efb\u52a1\u5907\u6ce8 -fd, --federate_data \u662f array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.task_id string task id Request Example flow_server_cli task create -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"create"},{"location":"zh/client/cli/flow_server/task/#update","text":"\u66f4\u65b0\u4efb\u52a1 Usage flow_server_cli task update [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id -n, --task_name \u662f string \u4efb\u52a1\u540d\u79f0 -t, --template_id \u662f string \u4efb\u52a1\u5173\u8054\u6a21\u677f -r, --remark \u5426 string \u4efb\u52a1\u5907\u6ce8 -fd, --federate_data \u662f array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task update -id bbc0c30e96bc4da29b2b326fb1f8786e -n task01 -t ea0f10bfbaf64a74a061d54c94cc69 -r \"This is a new remark.\" -fd '[{\"federated_id\": \"federate-1\", \"federated_data\": \"\"}]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"zh/client/cli/flow_server/task/#get","text":"\u83b7\u53d6\u4efb\u52a1\u8be6\u60c5 Usage flow_server_cli task get [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data dict \u4efb\u52a1\u8be6\u60c5 Request Example flow_server_cli task get -id bbc0c30e96bc4da29b2b326fb1f8786e Response Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"get"},{"location":"zh/client/cli/flow_server/task/#list","text":"\u83b7\u53d6\u4efb\u52a1\u5217\u8868 Usage flow_server_cli task list [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -p, --page \u5426 int \u5f53\u524d\u9875\uff0c\u9ed8\u8ba4\u4e3a1 -l, --limit \u5426 int \u5f53\u524d\u9875\u67e5\u8be2\u7684\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a10 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.task_count int \u4efb\u52a1\u603b\u6570 data.tasks array \u5f53\u524d\u9875\u7684\u4efb\u52a1\u5217\u8868 Request Example flow_server_cli task list -p 1 -l 10 Response Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"list"},{"location":"zh/client/cli/flow_server/task/#delete","text":"\u5220\u9664\u4efb\u52a1 Usage flow_server_cli task delete [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"zh/client/cli/flow_server/task/#start","text":"\u5f00\u59cb\u4efb\u52a1 Usage flow_server_cli task start [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task start -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"start"},{"location":"zh/client/cli/flow_server/task/#stop","text":"\u505c\u6b62\u4efb\u52a1 Usage flow_server_cli task stop [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --task_id \u662f string \u4efb\u52a1id Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli task stop -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"stop"},{"location":"zh/client/cli/flow_server/template/","text":"Template \u00b6 create \u00b6 \u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template create [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -n, --template_name \u662f string \u6a21\u677f\u540d\u79f0 -r, --remark \u5426 string \u6a21\u677f\u8bf4\u660e -i, --image_url \u662f string \u6a21\u677f\u914d\u7f6e\u7684\u955c\u50cfurl\u5730\u5740 -w, --workdir \u5426 string \u955c\u50cfworkdir -c, --command \u5426 string \u955c\u50cf\u542f\u52a8\u547d\u4ee4 -hp, --hyper_parameter \u5426 string \u955c\u50cf\u542f\u52a8\u4f20\u9012\u7684\u8d85\u53c2 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.template_id string \u751f\u6210\u7684\u6a21\u677fid Request Example flow_server_cli template create -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } } update \u00b6 \u66f4\u65b0\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template update [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 -n, --template_name \u662f string \u6a21\u677f\u540d\u79f0 -r, --remark \u5426 string \u6a21\u677f\u8bf4\u660e -i, --image_url \u662f string \u6a21\u677f\u914d\u7f6e\u7684\u955c\u50cfurl\u5730\u5740 -w, --workdir \u5426 string \u955c\u50cfworkdir -c, --command \u5426 string \u955c\u50cf\u542f\u52a8\u547d\u4ee4 -hp, --hyper_parameter \u5426 array \u955c\u50cf\u542f\u52a8\u4f20\u9012\u7684\u8d85\u53c2 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.template_id string \u751f\u6210\u7684\u6a21\u677fid Request Example flow_server_cli template update -id 20f42769b99b492691da1ba2f236b1 -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 \u67e5\u8be2\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f\u4fe1\u606f Usage flow_server_cli template get [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.name string \u6a21\u677f\u540d\u79f0 data.remark string \u6a21\u677f\u5907\u6ce8 data.image_url string \u6a21\u677f\u955c\u50cf\u7684url\u5730\u5740 data.workdir string \u6a21\u677f\u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.command array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 data.hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2 data.template_id string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 data.create_time string \u6a21\u677f\u7684\u521b\u5efa\u65f6\u95f4 data.modify_time string \u6a21\u677f\u7684\u66f4\u65b0\u65f6\u95f4 Request Example flow_server_cli template get -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } } list \u00b6 \u6279\u91cf\u67e5\u8be2\u6a21\u677f\u4fe1\u606f Usage flow_server_cli template list [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -p, --page \u5426 int \u5f53\u524d\u9875\uff0c\u9ed8\u8ba4\u4e3a1 -l, --limit \u5426 int \u5f53\u524d\u9875\u67e5\u8be2\u7684\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a10 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.templates[index].name string \u6a21\u677f\u540d\u79f0 data.templates[index].remark string \u6a21\u677f\u5907\u6ce8 data.templates[index].image_url string \u6a21\u677f\u955c\u50cf\u7684url\u5730\u5740 data.templates[index].workdir string \u6a21\u677f\u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.templates[index].command array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 data.templates[index].hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2 data.templates[index].template_id string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 data.templates[index].create_time string \u6a21\u677f\u7684\u521b\u5efa\u65f6\u95f4 data.templates[index].modify_time string \u6a21\u677f\u7684\u66f4\u65b0\u65f6\u95f4 Request Example flow_server_cli template list -p 1 -l 2 Rexponse Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } } delete \u00b6 \u5220\u9664\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template delete [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli template delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Template"},{"location":"zh/client/cli/flow_server/template/#template","text":"","title":"Template"},{"location":"zh/client/cli/flow_server/template/#create","text":"\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template create [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -n, --template_name \u662f string \u6a21\u677f\u540d\u79f0 -r, --remark \u5426 string \u6a21\u677f\u8bf4\u660e -i, --image_url \u662f string \u6a21\u677f\u914d\u7f6e\u7684\u955c\u50cfurl\u5730\u5740 -w, --workdir \u5426 string \u955c\u50cfworkdir -c, --command \u5426 string \u955c\u50cf\u542f\u52a8\u547d\u4ee4 -hp, --hyper_parameter \u5426 string \u955c\u50cf\u542f\u52a8\u4f20\u9012\u7684\u8d85\u53c2 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.template_id string \u751f\u6210\u7684\u6a21\u677fid Request Example flow_server_cli template create -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } }","title":"create"},{"location":"zh/client/cli/flow_server/template/#update","text":"\u66f4\u65b0\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template update [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 -n, --template_name \u662f string \u6a21\u677f\u540d\u79f0 -r, --remark \u5426 string \u6a21\u677f\u8bf4\u660e -i, --image_url \u662f string \u6a21\u677f\u914d\u7f6e\u7684\u955c\u50cfurl\u5730\u5740 -w, --workdir \u5426 string \u955c\u50cfworkdir -c, --command \u5426 string \u955c\u50cf\u542f\u52a8\u547d\u4ee4 -hp, --hyper_parameter \u5426 array \u955c\u50cf\u542f\u52a8\u4f20\u9012\u7684\u8d85\u53c2 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.template_id string \u751f\u6210\u7684\u6a21\u677fid Request Example flow_server_cli template update -id 20f42769b99b492691da1ba2f236b1 -n template_01 -r 'template test' -i pytorch_ocr:latest -w /data/ocr -c '[\"python\", \"run.py\"]' -hp '[\"epoch=1\"]' Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"zh/client/cli/flow_server/template/#get","text":"\u67e5\u8be2\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f\u4fe1\u606f Usage flow_server_cli template get [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.name string \u6a21\u677f\u540d\u79f0 data.remark string \u6a21\u677f\u5907\u6ce8 data.image_url string \u6a21\u677f\u955c\u50cf\u7684url\u5730\u5740 data.workdir string \u6a21\u677f\u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.command array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 data.hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2 data.template_id string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 data.create_time string \u6a21\u677f\u7684\u521b\u5efa\u65f6\u95f4 data.modify_time string \u6a21\u677f\u7684\u66f4\u65b0\u65f6\u95f4 Request Example flow_server_cli template get -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } }","title":"get"},{"location":"zh/client/cli/flow_server/template/#list","text":"\u6279\u91cf\u67e5\u8be2\u6a21\u677f\u4fe1\u606f Usage flow_server_cli template list [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -p, --page \u5426 int \u5f53\u524d\u9875\uff0c\u9ed8\u8ba4\u4e3a1 -l, --limit \u5426 int \u5f53\u524d\u9875\u67e5\u8be2\u7684\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a10 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f data.templates[index].name string \u6a21\u677f\u540d\u79f0 data.templates[index].remark string \u6a21\u677f\u5907\u6ce8 data.templates[index].image_url string \u6a21\u677f\u955c\u50cf\u7684url\u5730\u5740 data.templates[index].workdir string \u6a21\u677f\u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.templates[index].command array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 data.templates[index].hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2 data.templates[index].template_id string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 data.templates[index].create_time string \u6a21\u677f\u7684\u521b\u5efa\u65f6\u95f4 data.templates[index].modify_time string \u6a21\u677f\u7684\u66f4\u65b0\u65f6\u95f4 Request Example flow_server_cli template list -p 1 -l 2 Rexponse Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } }","title":"list"},{"location":"zh/client/cli/flow_server/template/#delete","text":"\u5220\u9664\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f Usage flow_server_cli template delete [ OPTIONS ] OPTIONS \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -id, --template_id \u662f string \u6a21\u677f\u7684\u552f\u4e00\u6807\u8bc6 Response \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e ret_code int \u8fd4\u56de\u7801 ret_msg string \u8fd4\u56de\u4fe1\u606f Request Example flow_server_cli template delete -id 20f42769b99b492691da1ba2f236b1 Response Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"zh/client/sdk/flow_federate/task/","text":"Task \u00b6 List \u00b6 \u83b7\u53d6\u4efb\u52a1\u5217\u8868 Function list ( cls, keyword: str, page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f","title":"Task"},{"location":"zh/client/sdk/flow_federate/task/#task","text":"","title":"Task"},{"location":"zh/client/sdk/flow_federate/task/#list","text":"\u83b7\u53d6\u4efb\u52a1\u5217\u8868 Function list ( cls, keyword: str, page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f","title":"List"},{"location":"zh/client/sdk/flow_server/task/","text":"Task \u00b6 Create \u00b6 \u521b\u5efa\u4efb\u52a1 Function create ( cls, name: str, template_id: str, remark: str, federate_data: List [ Any ] , ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.task_id string \u521b\u5efa\u7684\u4efb\u52a1id Call Example flow_server_client.task.create ( name = \"testCase1\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"\" }] , ) Return Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Update \u00b6 \u66f4\u65b0\u4efb\u52a1 Function update ( cls, task_id: str, name: str, template_id: str, remark: str, federate_data: List, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.update ( task_id = \"0578abed1032425499abd20f2ef67938\" , name = \"testCase\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"aa\" }] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Get \u00b6 \u83b7\u53d6\u4efb\u52a1\u8be6\u60c5 Function get ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data dict \u4efb\u52a1\u8be6\u60c5 Call Example flow_server_client.task.get ( \"0578abed1032425499abd20f2ef67938\" ) Return Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } List \u00b6 \u83b7\u53d6\u4efb\u52a1\u5217\u8868 Function list ( cls, page: int, limit: int ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e page yes int \u9875\u7801 limit yes int \u6bcf\u9875\u7684\u6570\u91cf Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.task_count int \u4efb\u52a1\u603b\u6570 data.tasks array \u4efb\u52a1\u5217\u8868 Call Example flow_server_client.task.list ( 1 , 10 ) Return Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Delete \u00b6 \u5220\u9664\u4efb\u52a1 Function delete ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.delete ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Start \u00b6 \u5f00\u59cb\u4efb\u52a1 Function start ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.start ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } Stop \u00b6 \u505c\u6b62\u4efb\u52a1 Function stop ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.stop ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Task"},{"location":"zh/client/sdk/flow_server/task/#task","text":"","title":"Task"},{"location":"zh/client/sdk/flow_server/task/#create","text":"\u521b\u5efa\u4efb\u52a1 Function create ( cls, name: str, template_id: str, remark: str, federate_data: List [ Any ] , ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.task_id string \u521b\u5efa\u7684\u4efb\u52a1id Call Example flow_server_client.task.create ( name = \"testCase1\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"\" }] , ) Return Example { \"data\" : { \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Create"},{"location":"zh/client/sdk/flow_server/task/#update","text":"\u66f4\u65b0\u4efb\u52a1 Function update ( cls, task_id: str, name: str, template_id: str, remark: str, federate_data: List, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id name yes string \u4efb\u52a1\u540d\u79f0 template_id yes string \u4efb\u52a1\u5173\u8054\u7684\u6a21\u677fid remark no string \u4efb\u52a1\u5907\u6ce8\u4fe1\u606f federate_data yes array \u4efb\u52a1\u5173\u8054\u7684\u8054\u90a6\u65b9\u4fe1\u606f Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.update ( task_id = \"0578abed1032425499abd20f2ef67938\" , name = \"testCase\" , template_id = \"ea0f10bfbaf64a74a061d54c94cc69\" , remark = \"This is a remark.\" , federate_data =[{ \"federated_id\" : \"federate-1\" , \"federated_data\" : \"aa\" }] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Update"},{"location":"zh/client/sdk/flow_server/task/#get","text":"\u83b7\u53d6\u4efb\u52a1\u8be6\u60c5 Function get ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data dict \u4efb\u52a1\u8be6\u60c5 Call Example flow_server_client.task.get ( \"0578abed1032425499abd20f2ef67938\" ) Return Example { \"data\" : { \"create_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"aa\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Mon, 25 Jul 2022 20:31:21 -0000\" , \"name\" : \"testCase\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"0578abed1032425499abd20f2ef67938\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Get"},{"location":"zh/client/sdk/flow_server/task/#list","text":"\u83b7\u53d6\u4efb\u52a1\u5217\u8868 Function list ( cls, page: int, limit: int ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e page yes int \u9875\u7801 limit yes int \u6bcf\u9875\u7684\u6570\u91cf Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.task_count int \u4efb\u52a1\u603b\u6570 data.tasks array \u4efb\u52a1\u5217\u8868 Call Example flow_server_client.task.list ( 1 , 10 ) Return Example { \"data\" : { \"task_count\" : 1 , \"tasks\" : [ { \"create_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"federate_data\" : [ { \"federated_data\" : \"\" , \"federated_id\" : \"federate-1\" } ], \"modify_time\" : \"Tue, 26 Jul 2022 16:05:59 -0000\" , \"name\" : \"testCase1\" , \"party_status\" : null , \"remark\" : \"This is a remark.\" , \"status\" : null , \"task_id\" : \"b1731d312dae4edba6d07a6fff547b4a\" , \"template_id\" : \"ea0f10bfbaf64a74a061d54c94cc69\" } ] }, \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"List"},{"location":"zh/client/sdk/flow_server/task/#delete","text":"\u5220\u9664\u4efb\u52a1 Function delete ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.delete ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Delete"},{"location":"zh/client/sdk/flow_server/task/#start","text":"\u5f00\u59cb\u4efb\u52a1 Function start ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.start ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Start"},{"location":"zh/client/sdk/flow_server/task/#stop","text":"\u505c\u6b62\u4efb\u52a1 Function stop ( cls, task_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e task_id yes string \u4efb\u52a1id Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.task.stop ( \"5986dd8986654fa6af3404a1d1eada72\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Stop"},{"location":"zh/client/sdk/flow_server/template/","text":"Template \u00b6 create \u00b6 \u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Function create ( cls, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u6a21\u677f\u540d\u79f0 image_url yes string \u955c\u50cfurl\u5730\u5740 workdir yes string \u955c\u50cf\u5de5\u4f5c\u76ee\u5f55 command yes array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 remark no string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f hyper_parameter no array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2\u6570 Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.template_id string \u521b\u5efa\u7684\u6a21\u677fid Call Example flow_server_client.template.create ( name = \"template_01\" , image_url = \"iflearner_ocr:0.0.1\" , workdir = \"/data/ocr/script\" , command =[] , remark = \"\" , hyper_parameter = [] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } } update \u00b6 \u66f4\u65b0\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f\u3002 Function update ( cls, template_id: str, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid name yes string \u6a21\u677f\u540d image_url yes string \u955c\u50cfurl\u5730\u5740 workdir yes string \u955c\u50cf\u5de5\u4f5c\u76ee\u5f55 command yes array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 remark no string \u6a21\u677f\u63cf\u8ff0 hyper_parameter no array \u955c\u50cf\u542f\u52a8\u8d85\u53c2\u6570 Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.template.update ( template_id = \"20f42769b99b492691da1ba2f236b1\" , name = \"template_01\" , image_url = \"iflearner_ocr:0.0.2\" , workdir = \"/data/ocr/script\" , command =[] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" } get \u00b6 \u67e5\u8be2\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f Function get ( cls, template_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.name string \u6a21\u677f\u540d\u79f0 data.remark string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f data.image_url string \u955c\u50cf\u7684url\u5730\u5740 data.workdir string \u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.command array \u955c\u50cf\u7684\u542f\u52a8\u547d\u4ee4 data.hyper_parameter array \u955c\u50cf\u7684\u542f\u52a8\u8d85\u53c2\u6570 data.template_id string \u6a21\u677fid data.create_time string \u6a21\u677f\u521b\u5efa\u65f6\u95f4 data.modify_time string \u6a21\u677f\u66f4\u65b0\u65f6\u95f4 Call Example flow_server_client.template.get ( template_id = \"20f42769b99b492691da1ba2f236b1\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } } list \u00b6 \u6279\u91cf\u67e5\u8be2\u6a21\u677f\u4fe1\u606f Function list ( cls, keyword: str = \"\" , page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e page no int \u5f53\u524d\u9875 limit no int \u5f53\u524d\u9875\u67e5\u8be2\u6570\u76ee Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.templates[index].name string \u6a21\u677f\u540d data.templates[index].remark string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f data.templates[index].image_url string \u955c\u50cf\u7684url\u5730\u5740 data.templates[index].workdir string \u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.templates[index].command array \u955c\u50cf\u7684\u542f\u52a8\u547d\u4ee4 data.templates[index].hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2\u6570 data.templates[index].template_id string \u6a21\u677fid data.templates[index].create_time string \u6a21\u677f\u521b\u5efa\u65f6\u95f4 data.templates[index].modify_time string \u6a21\u677f\u66f4\u65b0\u65f6\u95f4 Call Example flow_server_client.template.list ( keyword = \"\" , page = 1 , limit = 10 ) Return Example \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } } delete \u00b6 \u5220\u9664\u4e00\u4e2a\u6307\u5b9a\u7684\u6a21\u677f Function delete ( cls, template_id: str ) -> Dict [ str, Any ] : Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example ~ ~ flow_server_client.template.delete ( template_id = self._generate_template_id ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"Template"},{"location":"zh/client/sdk/flow_server/template/#template","text":"","title":"Template"},{"location":"zh/client/sdk/flow_server/template/#create","text":"\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u6a21\u677f Function create ( cls, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e name yes string \u6a21\u677f\u540d\u79f0 image_url yes string \u955c\u50cfurl\u5730\u5740 workdir yes string \u955c\u50cf\u5de5\u4f5c\u76ee\u5f55 command yes array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 remark no string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f hyper_parameter no array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2\u6570 Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.template_id string \u521b\u5efa\u7684\u6a21\u677fid Call Example flow_server_client.template.create ( name = \"template_01\" , image_url = \"iflearner_ocr:0.0.1\" , workdir = \"/data/ocr/script\" , command =[] , remark = \"\" , hyper_parameter = [] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" } }","title":"create"},{"location":"zh/client/sdk/flow_server/template/#update","text":"\u66f4\u65b0\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f\u3002 Function update ( cls, template_id: str, name: str, image_url: str, workdir: str, command: List [ str ] , remark: str = None, hyper_parameter: list = None, ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid name yes string \u6a21\u677f\u540d image_url yes string \u955c\u50cfurl\u5730\u5740 workdir yes string \u955c\u50cf\u5de5\u4f5c\u76ee\u5f55 command yes array \u955c\u50cf\u542f\u52a8\u547d\u4ee4 remark no string \u6a21\u677f\u63cf\u8ff0 hyper_parameter no array \u955c\u50cf\u542f\u52a8\u8d85\u53c2\u6570 Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example flow_server_client.template.update ( template_id = \"20f42769b99b492691da1ba2f236b1\" , name = \"template_01\" , image_url = \"iflearner_ocr:0.0.2\" , workdir = \"/data/ocr/script\" , command =[] , ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"update"},{"location":"zh/client/sdk/flow_server/template/#get","text":"\u67e5\u8be2\u4e00\u4e2a\u6307\u5b9a\u7684\u4efb\u52a1\u6a21\u677f Function get ( cls, template_id: str ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.name string \u6a21\u677f\u540d\u79f0 data.remark string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f data.image_url string \u955c\u50cf\u7684url\u5730\u5740 data.workdir string \u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.command array \u955c\u50cf\u7684\u542f\u52a8\u547d\u4ee4 data.hyper_parameter array \u955c\u50cf\u7684\u542f\u52a8\u8d85\u53c2\u6570 data.template_id string \u6a21\u677fid data.create_time string \u6a21\u677f\u521b\u5efa\u65f6\u95f4 data.modify_time string \u6a21\u677f\u66f4\u65b0\u65f6\u95f4 Call Example flow_server_client.template.get ( template_id = \"20f42769b99b492691da1ba2f236b1\" ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"name\" : \"template_003\" , \"remark\" : \"template test\" , \"image_url\" : \"pytorch_ocr:latest\" , \"workdir\" : \"/data/ocr\" , \"command\" : [ \"python\" , \"run.py\" ], \"hyper_parameter\" : [ \"epoch=1\" ], \"template_id\" : \"20f42769b99b492691da1ba2f236b1\" , \"create_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" , \"modify_time\" : \"Mon, 25 Jul 2022 15:59:55 -0000\" } }","title":"get"},{"location":"zh/client/sdk/flow_server/template/#list","text":"\u6279\u91cf\u67e5\u8be2\u6a21\u677f\u4fe1\u606f Function list ( cls, keyword: str = \"\" , page: int = 1 , limit: int = 10 ) -> Dict [ str, Any ] Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e page no int \u5f53\u524d\u9875 limit no int \u5f53\u524d\u9875\u67e5\u8be2\u6570\u76ee Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f data.templates[index].name string \u6a21\u677f\u540d data.templates[index].remark string \u6a21\u677f\u5907\u6ce8\u4fe1\u606f data.templates[index].image_url string \u955c\u50cf\u7684url\u5730\u5740 data.templates[index].workdir string \u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55 data.templates[index].command array \u955c\u50cf\u7684\u542f\u52a8\u547d\u4ee4 data.templates[index].hyper_parameter array \u955c\u50cf\u542f\u52a8\u7684\u8d85\u53c2\u6570 data.templates[index].template_id string \u6a21\u677fid data.templates[index].create_time string \u6a21\u677f\u521b\u5efa\u65f6\u95f4 data.templates[index].modify_time string \u6a21\u677f\u66f4\u65b0\u65f6\u95f4 Call Example flow_server_client.template.list ( keyword = \"\" , page = 1 , limit = 10 ) Return Example \"ret_code\" : 0 , \"ret_msg\" : \"success\" , \"data\" : { \"templates\" : [ { \"name\" : \"f5b75371-5dc0-47c6-9a8d-86cd3e06b56a\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0381e7b3bedb4578a3b5a8d11cd65d\" , \"create_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 16:39:19 -0000\" }, { \"name\" : \"707fc798-774a-44be-9844-019c4a7e6714\" , \"remark\" : \"\" , \"image_url\" : \"iflearner_ocr:0.0.1\" , \"workdir\" : \"/data/ocr/script\" , \"command\" : [], \"hyper_parameter\" : null , \"template_id\" : \"0596cb767f0448f4b4fa4f11f65fa8\" , \"create_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" , \"modify_time\" : \"Wed, 20 Jul 2022 17:06:20 -0000\" } ], \"template_count\" : 108 } }","title":"list"},{"location":"zh/client/sdk/flow_server/template/#delete","text":"\u5220\u9664\u4e00\u4e2a\u6307\u5b9a\u7684\u6a21\u677f Function delete ( cls, template_id: str ) -> Dict [ str, Any ] : Parameters \u53c2\u6570 \u5fc5\u586b \u7c7b\u578b \u8bf4\u660e template_id yes string \u6a21\u677fid Return \u53c2\u6570 \u7c7b\u578b \u8bf4\u660e ret_code int \u7ed3\u679c\u7801 ret_msg string \u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f Call Example ~ ~ flow_server_client.template.delete ( template_id = self._generate_template_id ) Return Example { \"ret_code\" : 0 , \"ret_msg\" : \"success\" }","title":"delete"},{"location":"zh/faq/installation/","text":"\u5b89\u88c5FAQ \u00b6","title":"Deploy"},{"location":"zh/faq/installation/#faq","text":"","title":"\u5b89\u88c5FAQ"},{"location":"zh/installation/offline_on_kubernetes_installation/","text":"\u79bb\u7ebf\u5b89\u88c5 \u00b6","title":"OfflineOnKubernetes"},{"location":"zh/installation/offline_on_kubernetes_installation/#_1","text":"","title":"\u79bb\u7ebf\u5b89\u88c5"},{"location":"zh/installation/online_on_kubernetes_installation/","text":"\u5728kubernetes\u96c6\u7fa4\u4e0a\u642d\u5efaiflearner-flow \u00b6 1. \u603b\u4f53\u4ecb\u7ecd \u00b6 1.1 \u7cfb\u7edf\u4ecb\u7ecd \u00b6 Iflearner Flow\u662f\u4e00\u4e2a\u57fa\u4e8e\u5e95\u5c42\u8054\u90a6\u5b66\u4e60\u6846\u67b6Iflearner\uff0c\u9488\u5bf9\u6a2a\u5411\u8054\u90a6\u5b66\u4e60\u573a\u666f\u5efa\u6a21\u7684\u591a\u65b9\u8054\u5408\u4efb\u52a1\u5b89\u5168\u8c03\u5ea6\u5e73\u53f0\u3002 1.2 \u7ec4\u4ef6\u8bf4\u660e \u00b6 \u670d\u52a1\u7aef\u65b9 \u7ec4\u4ef6 \u7248\u672c \u8bf4\u660e kubernetes 1.18 \u5bb9\u5668\u7f16\u6392\u96c6\u7fa4\uff0cflow-server\u4f9d\u8d56 mysql 5.7 \u6570\u636e\u5b58\u50a8\uff0cflow-server\u4f9d\u8d56 ifleaner-flow-server 0.1.0 server\u4fa7\u8c03\u5ea6\u7ec4\u4ef6 ifleaner-operator 0.0.1 kubernetes crd\u7684\u63a7\u5236\u5668 \u8054\u90a6\u65b9 \u7ec4\u4ef6 \u7248\u672c \u8bf4\u660e kubernetes 1.18 \u5bb9\u5668\u7f16\u6392\u96c6\u7fa4\uff0cflow-server\u4f9d\u8d56 mysql 5.7 \u6570\u636e\u5b58\u50a8\uff0cflow-server\u4f9d\u8d56 ifleaner-flow-federate 0.1.0 federate\u4fa7\u8c03\u5ea6\u7ec4\u4ef6 ifleaner-operator 0.0.1 kubernetes crd\u7684\u63a7\u5236\u5668 1.3 \u7cfb\u7edf\u8bbe\u8ba1 \u00b6 \u7cfb\u7edf\u8bbe\u8ba1 2. \u8be6\u7ec6\u8bbe\u8ba1 \u00b6 2.1 \u90e8\u7f72\u89c4\u5212 \u00b6 \u672c\u793a\u4f8b\u4e3a\u4e86\u4fbf\u4e8e\u6f14\u793a\uff0c\u670d\u52a1\u4fa7\u548c\u8054\u90a6\u4fa7\u90fd\u53ea\u6709\u4e00\u53f0\u4e3b\u673a\uff0c\u4e8b\u5b9e\u4e0a\u4f9d\u6258\u4e8ekubernetes\uff0c\u53ef\u4ee5\u81ea\u7531\u6269\u5927\u6bcf\u4fa7\u7684\u96c6\u7fa4\u89c4\u6a21\u3002 \u670d\u52a1\u4fa7 IP\u5730\u5740 \u64cd\u4f5c\u7cfb\u7edf \u4e3b\u673a\u914d\u7f6e \u5b58\u50a8 \u90e8\u7f72\u6a21\u5757 172.31.0.1 CentOS 7.4 16C32G 100G kubernetes\u3001mysql\u3001iflearner-flow-server\u3001ifleaner-operator \u8054\u90a6\u4fa7 \u8054\u90a6 IP\u5730\u5740 \u64cd\u4f5c\u7cfb\u7edf \u4e3b\u673a\u914d\u7f6e \u5b58\u50a8 \u90e8\u7f72\u6a21\u5757 \u8054\u90a61 172.31.0.2 CentOS 7.4 16C32G, GPU\u5361\u4e00\u5f20(\u975e\u5fc5\u987b) 100G kubernetes\u3001mysql\u3001iflearner-flow-server\u3001ifleaner-operator \u8054\u90a62 172.31.0.3 CentOS 7.4 16C32G, GPU\u5361\u4e00\u5f20(\u975e\u5fc5\u987b) 100G kubernetes\u3001mysql\u3001iflearner-flow-federate\u3001ifleaner-operator > \u8fd9\u91cc\u53ea\u6f14\u793a\u4e86\u53ea\u6709\u4e24\u4e2a\u8054\u90a6\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u81ea\u7531\u6269\u5145 2.2 \u4e3b\u673a\u8d44\u6e90\u548c\u64cd\u4f5c\u7cfb\u7edf\u8981\u6c42 \u00b6 \u7c7b\u522b \u8bf4\u660e \u4e3b\u673a\u914d\u7f6e \u4e0d\u4f4e\u4e8e8C\u300116G\u300150G\uff0c\u5343\u5146\u7f51\u5361\u3001\u6700\u597d\u914d\u7f6eGPU\u5361\u8fdb\u884c\u8bad\u7ec3\u52a0\u901f \u64cd\u4f5c\u7cfb\u7edf CentOS linux 7.4\u53ca\u4ee5\u4e0a \u6587\u4ef6\u7cfb\u7edf 1\u3001\u6301\u4e45\u5316\u6570\u636e\u76d8\u9ed8\u8ba4\u6302\u8f7d\u5728/data\u76ee\u5f55\u4e0b\u3002 2\u3001\u6839\u76ee\u5f55\u7a7a\u95f2\u7a7a\u95f4\u4e0d\u4f4e\u4e8e20G\u3002 \u7cfb\u7edf\u53c2\u6570 1\u3001\u6587\u4ef6\u53e5\u67c4\u6570\u4e0d\u4f4e\u4e8e65535\u3002 2\u3001\u7528\u6237\u8fdb\u7a0b\u6570\u4e0d\u4f4e\u4e8e65535\u3002 2.3 \u7f51\u7edc\u8981\u6c42 \u00b6 \u7c7b\u522b \u8bf4\u660e \u9632\u706b\u5899\u7b56\u7565 1\u3001\u9632\u706b\u5899\u8bbe\u5907\u9700\u8981\u652f\u6301\u957f\u8fde\u63a5\u548c\u9700\u8981\u5bf9\u8fde\u63a5\u6570\u65e0\u9650\u5236\u3002 3. \u9879\u76ee\u90e8\u7f72(\u771f\u5b9e\u573a\u666f\u4e0b\u90e8\u7f72) \u00b6 \u5728\u771f\u5b9e\u573a\u666f\u4e0b\uff0c\u5404\u65b9\u90fd\u662f\u9694\u79bb\u7684\uff0c\u9700\u8981\u5404\u81ea\u90e8\u7f72\u4e00\u5957kubernetes\u96c6\u7fa4\u3002 3.1 \u90e8\u7f72\u793a\u610f\u56fe \u00b6 3.2 \u670d\u52a1\u4fa7\u90e8\u7f72 \u00b6 3.2.1 \u90e8\u7f72kubernetes \u00b6 \u63a8\u8350\u4e00\u4e2a\u6781\u7b80\u7684\u4e00\u952e\u90e8\u7f72\u65b9\u5f0f sealos \u5f53\u524d\u652f\u6301\u7248\u672c\u4e3a1.18 3.2.2 \u90e8\u7f72iflearner-operator \u00b6 \u53c2\u89c1 iflearner-operator 3.2.3 \u90e8\u7f72iflearner-flow-server \u00b6 \u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6781\u7b80\u7684\u90e8\u7f72\u65b9\u5f0f, \u8bf7\u53c2\u9605 flow-server\u90e8\u7f72\u548c\u8fd0\u7ef4\u6307\u5357 3.3 \u8054\u90a6\u4fa7\u90e8\u7f72 \u00b6 \u6bcf\u4e2a\u8054\u90a6\u65b9\u6267\u884c\u6b65\u9aa4\u4e00\u81f4\uff0c\u4e0b\u8ff0\u4e3a\u5355\u4e2a\u8054\u90a6\u65b9\u4e0b\u7684\u6267\u884c\u6b65\u9aa4 3.3.1 \u90e8\u7f72kubernetes \u00b6 \u63a8\u8350\u4e00\u4e2a\u6781\u7b80\u7684\u4e00\u952e\u90e8\u7f72\u65b9\u5f0f sealos \u5f53\u524d\u652f\u6301\u7248\u672c\u4e3a1.18 3.3.2 \u90e8\u7f72iflearner-operator \u00b6 \u53c2\u89c1 iflearner-operator 3.3.3 \u90e8\u7f72iflearner-flow-federate \u00b6 \u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6781\u7b80\u7684\u90e8\u7f72\u65b9\u5f0f, \u8bf7\u53c2\u9605 flow-federate\u90e8\u7f72\u548c\u8fd0\u7ef4\u6307\u5357 4. \u9879\u76ee\u90e8\u7f72(\u6d4b\u8bd5\u9a8c\u8bc1\u573a\u666f\u4e0b\u90e8\u7f72) \u00b6 \u5728\u6d4b\u8bd5\u9a8c\u8bc1\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u590d\u7528\u4e00\u5957kubernetes\u96c6\u7fa4\uff0c\u5728\u540c\u4e00\u4e2a\u96c6\u7fa4\u4e0b\u53bb\u505a\u6d4b\u8bd5\u9a8c\u8bc1\u3002 4.1 \u90e8\u7f72\u793a\u610f\u56fe \u00b6","title":"OnlineOnKubernetes"},{"location":"zh/installation/online_on_kubernetes_installation/#kubernetesiflearner-flow","text":"","title":"\u5728kubernetes\u96c6\u7fa4\u4e0a\u642d\u5efaiflearner-flow"},{"location":"zh/installation/online_on_kubernetes_installation/#1","text":"","title":"1. \u603b\u4f53\u4ecb\u7ecd"},{"location":"zh/installation/online_on_kubernetes_installation/#11","text":"Iflearner Flow\u662f\u4e00\u4e2a\u57fa\u4e8e\u5e95\u5c42\u8054\u90a6\u5b66\u4e60\u6846\u67b6Iflearner\uff0c\u9488\u5bf9\u6a2a\u5411\u8054\u90a6\u5b66\u4e60\u573a\u666f\u5efa\u6a21\u7684\u591a\u65b9\u8054\u5408\u4efb\u52a1\u5b89\u5168\u8c03\u5ea6\u5e73\u53f0\u3002","title":"1.1 \u7cfb\u7edf\u4ecb\u7ecd"},{"location":"zh/installation/online_on_kubernetes_installation/#12","text":"\u670d\u52a1\u7aef\u65b9 \u7ec4\u4ef6 \u7248\u672c \u8bf4\u660e kubernetes 1.18 \u5bb9\u5668\u7f16\u6392\u96c6\u7fa4\uff0cflow-server\u4f9d\u8d56 mysql 5.7 \u6570\u636e\u5b58\u50a8\uff0cflow-server\u4f9d\u8d56 ifleaner-flow-server 0.1.0 server\u4fa7\u8c03\u5ea6\u7ec4\u4ef6 ifleaner-operator 0.0.1 kubernetes crd\u7684\u63a7\u5236\u5668 \u8054\u90a6\u65b9 \u7ec4\u4ef6 \u7248\u672c \u8bf4\u660e kubernetes 1.18 \u5bb9\u5668\u7f16\u6392\u96c6\u7fa4\uff0cflow-server\u4f9d\u8d56 mysql 5.7 \u6570\u636e\u5b58\u50a8\uff0cflow-server\u4f9d\u8d56 ifleaner-flow-federate 0.1.0 federate\u4fa7\u8c03\u5ea6\u7ec4\u4ef6 ifleaner-operator 0.0.1 kubernetes crd\u7684\u63a7\u5236\u5668","title":"1.2 \u7ec4\u4ef6\u8bf4\u660e"},{"location":"zh/installation/online_on_kubernetes_installation/#13","text":"\u7cfb\u7edf\u8bbe\u8ba1","title":"1.3 \u7cfb\u7edf\u8bbe\u8ba1"},{"location":"zh/installation/online_on_kubernetes_installation/#2","text":"","title":"2. \u8be6\u7ec6\u8bbe\u8ba1"},{"location":"zh/installation/online_on_kubernetes_installation/#21","text":"\u672c\u793a\u4f8b\u4e3a\u4e86\u4fbf\u4e8e\u6f14\u793a\uff0c\u670d\u52a1\u4fa7\u548c\u8054\u90a6\u4fa7\u90fd\u53ea\u6709\u4e00\u53f0\u4e3b\u673a\uff0c\u4e8b\u5b9e\u4e0a\u4f9d\u6258\u4e8ekubernetes\uff0c\u53ef\u4ee5\u81ea\u7531\u6269\u5927\u6bcf\u4fa7\u7684\u96c6\u7fa4\u89c4\u6a21\u3002 \u670d\u52a1\u4fa7 IP\u5730\u5740 \u64cd\u4f5c\u7cfb\u7edf \u4e3b\u673a\u914d\u7f6e \u5b58\u50a8 \u90e8\u7f72\u6a21\u5757 172.31.0.1 CentOS 7.4 16C32G 100G kubernetes\u3001mysql\u3001iflearner-flow-server\u3001ifleaner-operator \u8054\u90a6\u4fa7 \u8054\u90a6 IP\u5730\u5740 \u64cd\u4f5c\u7cfb\u7edf \u4e3b\u673a\u914d\u7f6e \u5b58\u50a8 \u90e8\u7f72\u6a21\u5757 \u8054\u90a61 172.31.0.2 CentOS 7.4 16C32G, GPU\u5361\u4e00\u5f20(\u975e\u5fc5\u987b) 100G kubernetes\u3001mysql\u3001iflearner-flow-server\u3001ifleaner-operator \u8054\u90a62 172.31.0.3 CentOS 7.4 16C32G, GPU\u5361\u4e00\u5f20(\u975e\u5fc5\u987b) 100G kubernetes\u3001mysql\u3001iflearner-flow-federate\u3001ifleaner-operator > \u8fd9\u91cc\u53ea\u6f14\u793a\u4e86\u53ea\u6709\u4e24\u4e2a\u8054\u90a6\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u81ea\u7531\u6269\u5145","title":"2.1 \u90e8\u7f72\u89c4\u5212"},{"location":"zh/installation/online_on_kubernetes_installation/#22","text":"\u7c7b\u522b \u8bf4\u660e \u4e3b\u673a\u914d\u7f6e \u4e0d\u4f4e\u4e8e8C\u300116G\u300150G\uff0c\u5343\u5146\u7f51\u5361\u3001\u6700\u597d\u914d\u7f6eGPU\u5361\u8fdb\u884c\u8bad\u7ec3\u52a0\u901f \u64cd\u4f5c\u7cfb\u7edf CentOS linux 7.4\u53ca\u4ee5\u4e0a \u6587\u4ef6\u7cfb\u7edf 1\u3001\u6301\u4e45\u5316\u6570\u636e\u76d8\u9ed8\u8ba4\u6302\u8f7d\u5728/data\u76ee\u5f55\u4e0b\u3002 2\u3001\u6839\u76ee\u5f55\u7a7a\u95f2\u7a7a\u95f4\u4e0d\u4f4e\u4e8e20G\u3002 \u7cfb\u7edf\u53c2\u6570 1\u3001\u6587\u4ef6\u53e5\u67c4\u6570\u4e0d\u4f4e\u4e8e65535\u3002 2\u3001\u7528\u6237\u8fdb\u7a0b\u6570\u4e0d\u4f4e\u4e8e65535\u3002","title":"2.2 \u4e3b\u673a\u8d44\u6e90\u548c\u64cd\u4f5c\u7cfb\u7edf\u8981\u6c42"},{"location":"zh/installation/online_on_kubernetes_installation/#23","text":"\u7c7b\u522b \u8bf4\u660e \u9632\u706b\u5899\u7b56\u7565 1\u3001\u9632\u706b\u5899\u8bbe\u5907\u9700\u8981\u652f\u6301\u957f\u8fde\u63a5\u548c\u9700\u8981\u5bf9\u8fde\u63a5\u6570\u65e0\u9650\u5236\u3002","title":"2.3 \u7f51\u7edc\u8981\u6c42"},{"location":"zh/installation/online_on_kubernetes_installation/#3","text":"\u5728\u771f\u5b9e\u573a\u666f\u4e0b\uff0c\u5404\u65b9\u90fd\u662f\u9694\u79bb\u7684\uff0c\u9700\u8981\u5404\u81ea\u90e8\u7f72\u4e00\u5957kubernetes\u96c6\u7fa4\u3002","title":"3. \u9879\u76ee\u90e8\u7f72(\u771f\u5b9e\u573a\u666f\u4e0b\u90e8\u7f72)"},{"location":"zh/installation/online_on_kubernetes_installation/#31","text":"","title":"3.1 \u90e8\u7f72\u793a\u610f\u56fe"},{"location":"zh/installation/online_on_kubernetes_installation/#32","text":"","title":"3.2 \u670d\u52a1\u4fa7\u90e8\u7f72"},{"location":"zh/installation/online_on_kubernetes_installation/#321-kubernetes","text":"\u63a8\u8350\u4e00\u4e2a\u6781\u7b80\u7684\u4e00\u952e\u90e8\u7f72\u65b9\u5f0f sealos \u5f53\u524d\u652f\u6301\u7248\u672c\u4e3a1.18","title":"3.2.1 \u90e8\u7f72kubernetes"},{"location":"zh/installation/online_on_kubernetes_installation/#322-iflearner-operator","text":"\u53c2\u89c1 iflearner-operator","title":"3.2.2 \u90e8\u7f72iflearner-operator"},{"location":"zh/installation/online_on_kubernetes_installation/#323-iflearner-flow-server","text":"\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6781\u7b80\u7684\u90e8\u7f72\u65b9\u5f0f, \u8bf7\u53c2\u9605 flow-server\u90e8\u7f72\u548c\u8fd0\u7ef4\u6307\u5357","title":"3.2.3 \u90e8\u7f72iflearner-flow-server"},{"location":"zh/installation/online_on_kubernetes_installation/#33","text":"\u6bcf\u4e2a\u8054\u90a6\u65b9\u6267\u884c\u6b65\u9aa4\u4e00\u81f4\uff0c\u4e0b\u8ff0\u4e3a\u5355\u4e2a\u8054\u90a6\u65b9\u4e0b\u7684\u6267\u884c\u6b65\u9aa4","title":"3.3 \u8054\u90a6\u4fa7\u90e8\u7f72"},{"location":"zh/installation/online_on_kubernetes_installation/#331-kubernetes","text":"\u63a8\u8350\u4e00\u4e2a\u6781\u7b80\u7684\u4e00\u952e\u90e8\u7f72\u65b9\u5f0f sealos \u5f53\u524d\u652f\u6301\u7248\u672c\u4e3a1.18","title":"3.3.1 \u90e8\u7f72kubernetes"},{"location":"zh/installation/online_on_kubernetes_installation/#332-iflearner-operator","text":"\u53c2\u89c1 iflearner-operator","title":"3.3.2 \u90e8\u7f72iflearner-operator"},{"location":"zh/installation/online_on_kubernetes_installation/#333-iflearner-flow-federate","text":"\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6781\u7b80\u7684\u90e8\u7f72\u65b9\u5f0f, \u8bf7\u53c2\u9605 flow-federate\u90e8\u7f72\u548c\u8fd0\u7ef4\u6307\u5357","title":"3.3.3 \u90e8\u7f72iflearner-flow-federate"},{"location":"zh/installation/online_on_kubernetes_installation/#4","text":"\u5728\u6d4b\u8bd5\u9a8c\u8bc1\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u590d\u7528\u4e00\u5957kubernetes\u96c6\u7fa4\uff0c\u5728\u540c\u4e00\u4e2a\u96c6\u7fa4\u4e0b\u53bb\u505a\u6d4b\u8bd5\u9a8c\u8bc1\u3002","title":"4. \u9879\u76ee\u90e8\u7f72(\u6d4b\u8bd5\u9a8c\u8bc1\u573a\u666f\u4e0b\u90e8\u7f72)"},{"location":"zh/installation/online_on_kubernetes_installation/#41","text":"","title":"4.1 \u90e8\u7f72\u793a\u610f\u56fe"},{"location":"zh/quick_start/mnist/","text":"\u5feb\u901f\u5f00\u59cb \u00b6","title":"QuickStartMnist"},{"location":"zh/quick_start/mnist/#_1","text":"","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"zh/tutorial/dev_manual/","text":"\u5f00\u53d1\u6307\u5357 \u00b6","title":"DevelopmentManual"},{"location":"zh/tutorial/dev_manual/#_1","text":"","title":"\u5f00\u53d1\u6307\u5357"},{"location":"zh/tutorial/system_arch/","text":"Iflearner Flow Design \u00b6 Summary \u00b6 There are two roles in horizontal federated learning, server and participant. The architecture is as follows: Each party should train the model with its own local data and upload the model parameters or gradients to the server every epoch. When the server receives data from the parties, the server handles the aggregation operation. The server then sends the aggregated data to each party, and each party starts a new epoch of training. Component \u00b6 Iflearner Flow has two components, iflearner-flow-server and iflearner-flow-federate. These components run on kubernetes and depend on the iflearner-operator component. The detailed functions are as follows: Implement \u00b6 There are four main source codes in the python directory: iflearner_flow_client sdk It provides a python package of http API for easy development and integration. cli It is a command tool, basesd on sdk. iflearner_flow_federate Client source code iflearner_flow_server Server source code iflearner_job It encapsulates operations on the kubernetes IflearnerJob object, which is provided by iflearner-operator.","title":"SystemArch"},{"location":"zh/tutorial/system_arch/#iflearner-flow-design","text":"","title":"Iflearner Flow Design"},{"location":"zh/tutorial/system_arch/#summary","text":"There are two roles in horizontal federated learning, server and participant. The architecture is as follows: Each party should train the model with its own local data and upload the model parameters or gradients to the server every epoch. When the server receives data from the parties, the server handles the aggregation operation. The server then sends the aggregated data to each party, and each party starts a new epoch of training.","title":"Summary"},{"location":"zh/tutorial/system_arch/#component","text":"Iflearner Flow has two components, iflearner-flow-server and iflearner-flow-federate. These components run on kubernetes and depend on the iflearner-operator component. The detailed functions are as follows:","title":"Component"},{"location":"zh/tutorial/system_arch/#implement","text":"There are four main source codes in the python directory: iflearner_flow_client sdk It provides a python package of http API for easy development and integration. cli It is a command tool, basesd on sdk. iflearner_flow_federate Client source code iflearner_flow_server Server source code iflearner_job It encapsulates operations on the kubernetes IflearnerJob object, which is provided by iflearner-operator.","title":"Implement"},{"location":"zh/tutorial/system_arch_zh/","text":"Iflearner Flow\u8bbe\u8ba1\u6587\u6863 \u00b6 \u6982\u8ff0 \u00b6 \u6a2a\u5411\u8054\u90a6\u5b66\u4e60\u53ef\u5206\u4e3a\u4e24\u79cd\u89d2\u8272\uff0c\u8054\u90a6\u670d\u52a1\u7aef\u548c\u8054\u90a6\u53c2\u4e0e\u65b9\uff0c\u67b6\u6784\u56fe\u5982\u4e0b\uff1a \u53c2\u4e0e\u65b9\u7528\u81ea\u5df1\u672c\u5730\u7684\u6570\u636e\u8bad\u7ec3\u6a21\u578b\uff0c\u7136\u540e\u5728\u6bcf\u8f6e\u8bad\u7ec3\u4e2d\u4e0a\u4f20\u6a21\u578b\u53c2\u6570\u6216\u8005\u68af\u5ea6\u5230\u670d\u52a1\u7aef\u3002\u670d\u52a1\u7aef\u63a5\u6536\u53c2\u4e0e\u65b9\u4e0a\u4f20\u4e0a\u6765\u7684\u6570\u636e\uff0c\u5e76\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\uff0c\u7136\u540e\u518d\u5c06\u805a\u5408\u540e\u7684\u6570\u636e\u4e0b\u53d1\u7ed9\u53c2\u4e0e\u65b9\u3002\u53c2\u4e0e\u65b9\u968f\u540e\u5f00\u542f\u65b0\u4e00\u8f6e\u7684\u8bad\u7ec3\u3002 \u7ec4\u4ef6 \u00b6 Iflearner Flow\u5206\u4e3a\u670d\u52a1\u7aef\uff08iflearner-flow-server\uff09\u548c\u5ba2\u6237\u7aef\uff08iflearner-flow-federate\uff09\u4e24\u4e2a\u7ec4\u4ef6\uff0c\u7ec4\u4ef6\u5747\u53ef\u8fd0\u884c\u5728kubernetes\u4e4b\u4e0a\uff0c\u5e76\u4f9d\u8d56iflearner-operator\u7ec4\u4ef6\uff0c\u5177\u4f53\u7684\u529f\u80fd\u5982\u4e0b\uff1a \u5b9e\u73b0 \u00b6 \u5728python\u76ee\u5f55\u4e0b\u6709\u56db\u4e2a\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\uff1a iflearner_flow_client sdk \u63d0\u4f9b\u4e86\u5bf9\u5e94http\u63a5\u53e3\u7684python\u5305\uff0c\u65b9\u4fbf\u5f00\u53d1\u96c6\u6210\u3002 cli \u57fa\u4e8esdk\uff0c\u63d0\u4f9b\u4e86\u547d\u4ee4\u884c\u5de5\u5177\u3002 iflearner_flow_federate \u5ba2\u6237\u7aef\u7684\u4ee3\u7801 iflearner_flow_server \u670d\u52a1\u7aef\u4ee3\u7801 iflearner_job \u5c01\u88c5\u4e86\u5bf9kubernetes IflearnerJob\u5bf9\u8c61\u7684\u64cd\u4f5c\u3002\uff08IflearnerJob\u5bf9\u8c61\u7531iflearner-operator\u63d0\u4f9b\uff09","title":"Iflearner Flow\u8bbe\u8ba1\u6587\u6863"},{"location":"zh/tutorial/system_arch_zh/#iflearner-flow","text":"","title":"Iflearner Flow\u8bbe\u8ba1\u6587\u6863"},{"location":"zh/tutorial/system_arch_zh/#_1","text":"\u6a2a\u5411\u8054\u90a6\u5b66\u4e60\u53ef\u5206\u4e3a\u4e24\u79cd\u89d2\u8272\uff0c\u8054\u90a6\u670d\u52a1\u7aef\u548c\u8054\u90a6\u53c2\u4e0e\u65b9\uff0c\u67b6\u6784\u56fe\u5982\u4e0b\uff1a \u53c2\u4e0e\u65b9\u7528\u81ea\u5df1\u672c\u5730\u7684\u6570\u636e\u8bad\u7ec3\u6a21\u578b\uff0c\u7136\u540e\u5728\u6bcf\u8f6e\u8bad\u7ec3\u4e2d\u4e0a\u4f20\u6a21\u578b\u53c2\u6570\u6216\u8005\u68af\u5ea6\u5230\u670d\u52a1\u7aef\u3002\u670d\u52a1\u7aef\u63a5\u6536\u53c2\u4e0e\u65b9\u4e0a\u4f20\u4e0a\u6765\u7684\u6570\u636e\uff0c\u5e76\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\uff0c\u7136\u540e\u518d\u5c06\u805a\u5408\u540e\u7684\u6570\u636e\u4e0b\u53d1\u7ed9\u53c2\u4e0e\u65b9\u3002\u53c2\u4e0e\u65b9\u968f\u540e\u5f00\u542f\u65b0\u4e00\u8f6e\u7684\u8bad\u7ec3\u3002","title":"\u6982\u8ff0"},{"location":"zh/tutorial/system_arch_zh/#_2","text":"Iflearner Flow\u5206\u4e3a\u670d\u52a1\u7aef\uff08iflearner-flow-server\uff09\u548c\u5ba2\u6237\u7aef\uff08iflearner-flow-federate\uff09\u4e24\u4e2a\u7ec4\u4ef6\uff0c\u7ec4\u4ef6\u5747\u53ef\u8fd0\u884c\u5728kubernetes\u4e4b\u4e0a\uff0c\u5e76\u4f9d\u8d56iflearner-operator\u7ec4\u4ef6\uff0c\u5177\u4f53\u7684\u529f\u80fd\u5982\u4e0b\uff1a","title":"\u7ec4\u4ef6"},{"location":"zh/tutorial/system_arch_zh/#_3","text":"\u5728python\u76ee\u5f55\u4e0b\u6709\u56db\u4e2a\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\uff1a iflearner_flow_client sdk \u63d0\u4f9b\u4e86\u5bf9\u5e94http\u63a5\u53e3\u7684python\u5305\uff0c\u65b9\u4fbf\u5f00\u53d1\u96c6\u6210\u3002 cli \u57fa\u4e8esdk\uff0c\u63d0\u4f9b\u4e86\u547d\u4ee4\u884c\u5de5\u5177\u3002 iflearner_flow_federate \u5ba2\u6237\u7aef\u7684\u4ee3\u7801 iflearner_flow_server \u670d\u52a1\u7aef\u4ee3\u7801 iflearner_job \u5c01\u88c5\u4e86\u5bf9kubernetes IflearnerJob\u5bf9\u8c61\u7684\u64cd\u4f5c\u3002\uff08IflearnerJob\u5bf9\u8c61\u7531iflearner-operator\u63d0\u4f9b\uff09","title":"\u5b9e\u73b0"}]}